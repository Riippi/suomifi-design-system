{"version":3,"file":"component---src-pages-styles-colors-tsx-747ad554f61728c91737.js","mappings":"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","sources":["webpack://suomifi-design-system/./src/components/NoteBox.tsx","webpack://suomifi-design-system/./src/config/sidenav/styles.tsx","webpack://suomifi-design-system/./src/pages/styles/colors.tsx"],"sourcesContent":["import React from 'react';\nimport { defaultSuomifiTheme } from 'suomifi-ui-components';\n\nimport { Heading, Text } from 'components/ResponsiveComponents';\n\nconst NoteBox = ({ title, items }: Props): JSX.Element => (\n  <section\n    style={{\n      background: defaultSuomifiTheme.colors.highlightLight3,\n      margin: `${defaultSuomifiTheme.spacing.xl} 0`,\n      padding: defaultSuomifiTheme.spacing.m,\n      border: `1px solid ${defaultSuomifiTheme.colors.depthLight1}`,\n    }}\n  >\n    <Heading variant=\"h3\" as=\"h2\">\n      {title}\n    </Heading>\n    <ul\n      style={{ margin: 0, padding: `0 0 0 ${defaultSuomifiTheme.spacing.s}` }}\n    >\n      {items.map(\n        (item, index) =>\n          !!item && (\n            <li key={index} style={{ margin: defaultSuomifiTheme.spacing.m }}>\n              <Text>{item}</Text>\n            </li>\n          ),\n      )}\n    </ul>\n  </section>\n);\n\ninterface Props {\n  title: string;\n  items: string[];\n}\n\nexport default NoteBox;\n","import React from 'react';\nimport { StaticIcon } from 'suomifi-ui-components';\nimport { SideNavData } from 'components/SideNavData';\nimport stylesContent from '../../../locale/fi/styles.json';\nimport iconsContent from '../../../locale/fi/icons.json';\nimport typographyContent from '../../../locale/fi/typography.json';\nimport colorsContent from '../../../locale/fi/colors.json';\n\nconst sideNavData: SideNavData = {\n  title: stylesContent.title,\n  icon: <StaticIcon icon=\"magicWand\" />,\n  items: [\n    {\n      to: '/styles/',\n      showAsTo: '/styles/info/',\n      label: stylesContent['info.title'],\n    },\n    { to: '/styles/icons/', label: iconsContent.title },\n    { to: '/styles/typography/', label: typographyContent.title },\n    { to: '/styles/colors/', label: colorsContent.title },\n  ],\n};\nexport default sideNavData;\n","import React, { CSSProperties } from 'react';\nimport { defaultSuomifiTheme, ColorDesignTokens } from 'suomifi-ui-components';\nimport { getLuminance } from 'polished';\n\nimport colorsContent from '../../../locale/fi/colors.json';\nimport Layout from 'components/layout';\nimport SEO from 'components/seo';\nimport ComponentDescription from 'components/ComponentDescription';\nimport sideNavData from 'config/sidenav/styles';\nimport NoteBox from 'components/NoteBox';\nimport Section, { Props as SectionProps } from 'components/Section';\nimport ComponentExample from 'components/ComponentExample';\nimport { Heading, Text, Paragraph } from 'components/ResponsiveComponents';\n\nconst colorTokens = defaultSuomifiTheme.colors;\n\nconst borderForLightColor = `1px solid ${colorTokens.depthLight1}`;\n\ntype ColorKeys = keyof ColorDesignTokens;\n\ninterface ColorItem {\n  name: string;\n  value: string;\n  border: string;\n}\n\ntype ColorTypes = { [key in ColorKeys]?: ColorItem };\n\nconst colors: ColorTypes = Object.entries(colorTokens).reduce(\n  (obj: ColorTypes, [key, value]: [ColorKeys, string]) => {\n    return {\n      ...obj,\n      [key]: {\n        name: key,\n        value,\n        border:\n          getLuminance(value) > getLuminance('#f8f8f8')\n            ? borderForLightColor\n            : '0',\n      },\n    };\n  },\n  {},\n);\n\ntype ColorCategory = {\n  id: string;\n  colors: ColorItem[];\n};\n\nconst colorCategories: ColorCategory[] = [\n  {\n    id: 'textColors',\n    colors: [\n      colors.blackBase,\n      colors.blackLight1,\n      colors.depthBase,\n      colors.depthDark1,\n    ],\n  },\n  { id: 'brandColors', colors: [colors.brandBase] },\n  {\n    id: 'controlColors',\n    colors: [\n      colors.highlightBase,\n      colors.highlightLight1,\n      colors.highlightLight2,\n      colors.highlightLight3,\n      colors.highlightDark1,\n      colors.depthBase,\n      colors.depthLight2,\n      colors.depthDark1,\n      colors.accentBase,\n      colors.accentTertiaryDark1,\n    ],\n  },\n  {\n    id: 'iconColors',\n    colors: [colors.accentBase, colors.depthBase, colors.depthDark1],\n  },\n  {\n    id: 'backgroundColors',\n    colors: [\n      colors.whiteBase,\n      colors.depthLight3,\n      colors.depthLight1,\n      colors.highlightLight2,\n      colors.highlightLight3,\n      colors.highlightLight4,\n      colors.depthSecondary,\n      colors.depthSecondaryDark1,\n    ],\n  },\n  {\n    id: 'trafficColors',\n    colors: [\n      colors.successBase,\n      colors.successSecondary,\n      colors.warningBase,\n      colors.alertBase,\n      colors.alertLight1,\n    ],\n  },\n  {\n    id: 'accentColors',\n    colors: [\n      colors.accentBase,\n      colors.accentSecondary,\n      colors.accentSecondaryLight1,\n      colors.accentTertiary,\n    ],\n  },\n];\n\nconst getExampleColor = (\n  id: string,\n  name: string,\n  value: string,\n  label: string,\n  style?: CSSProperties,\n): JSX.Element => (\n  <div\n    key={id}\n    style={{\n      margin: `${defaultSuomifiTheme.spacing.xs} ${defaultSuomifiTheme.spacing.xl} ${defaultSuomifiTheme.spacing.xl} 0`,\n      lineHeight: '1rem',\n    }}\n  >\n    <div\n      style={{\n        width: '10rem',\n        height: '3rem',\n        marginBottom: defaultSuomifiTheme.spacing.s,\n        background: value,\n        ...style,\n      }}\n    />\n    <div style={{ fontSize: '.8rem' }}>{label}</div>\n    <div style={{ fontSize: '.8rem' }}>{value}</div>\n    <div style={{ fontSize: '.8rem' }}>{name}</div>\n  </div>\n);\n\nconst Page = (): JSX.Element => (\n  <Layout sideNavData={sideNavData}>\n    <SEO title={colorsContent.title} />\n    <Heading variant=\"h1\">{colorsContent.title}</Heading>\n\n    <Paragraph variant=\"lead\">\n      <Text variant=\"lead\">{colorsContent.intro}</Text>\n    </Paragraph>\n\n    <NoteBox\n      title={colorsContent['note.title']}\n      items={colorsContent['note.items']}\n    />\n\n    {colorsContent.sections.map((section: SectionProps, index: number) => (\n      <Section\n        key={index}\n        mainTitle={section.title}\n        paragraphs={section.paragraphs}\n        links={section.links}\n      />\n    ))}\n\n    {colorCategories.map((item) => (\n      <ComponentDescription\n        key={item.id}\n        mainTitle={colorsContent[`${item.id}.title`]}\n        description={colorsContent[`${item.id}.description`]}\n        exampleFirst={false}\n        noCode\n      >\n        <ComponentExample\n          style={{\n            padding: 0,\n            justifyContent: 'flex-start',\n            background: 'none',\n            border: 'none',\n          }}\n        >\n          {item.colors.map((color, index) =>\n            getExampleColor(\n              `${item.id}.${index}`,\n              color.name,\n              color.value,\n              colorsContent[`${color.name}.label`],\n              { border: color.border },\n            ),\n          )}\n        </ComponentExample>\n      </ComponentDescription>\n    ))}\n  </Layout>\n);\n\nexport default Page;\n"],"names":["title","items","style","background","defaultSuomifiTheme","margin","padding","border","variant","as","map","item","index","key","sideNavData","stylesContent","icon","to","showAsTo","label","iconsContent","typographyContent","colorsContent","colorTokens","borderForLightColor","depthLight1","colors","Object","entries","reduce","obj","value","name","getLuminance","colorCategories","id","blackBase","blackLight1","depthBase","depthDark1","brandBase","highlightBase","highlightLight1","highlightLight2","highlightLight3","highlightDark1","depthLight2","accentBase","accentTertiaryDark1","whiteBase","depthLight3","highlightLight4","depthSecondary","depthSecondaryDark1","successBase","successSecondary","warningBase","alertBase","alertLight1","accentSecondary","accentSecondaryLight1","accentTertiary","section","mainTitle","paragraphs","links","description","exampleFirst","noCode","justifyContent","color","lineHeight","width","height","marginBottom","fontSize"],"sourceRoot":""}