{"version":3,"sources":["webpack:///./src/config/sidenav/styles.js","webpack:///./src/components/NoteBox.tsx","webpack:///./src/pages/styles/colors.tsx"],"names":["t","title","icon","items","to","showAsTo","label","NoteBox","style","background","suomifiDesignTokens","colors","highlightLight3","margin","spacing","xl","padding","m","border","depthLight1","variant","as","s","map","item","index","key","colorTokens","undefined","borderForLightColor","Object","entries","reduce","obj","value","name","getLuminance","colorCategories","id","blackBase","blackLight1","depthBase","depthDark1","brandBase","highlightBase","highlightLight1","highlightLight2","highlightDark1","depthLight2","accentBase","accentTertiaryDark1","whiteBase","depthLight3","highlightLight4","depthSecondary","depthSecondaryDark1","successBase","successSecondary","warningBase","alertBase","alertLight1","accentSecondary","accentSecondaryLight1","accentTertiary","withI18next","ns","sideNavData","lead","section","mainTitle","paragraphs","links","description","exampleFirst","noCode","justifyContent","color","xs","lineHeight","width","height","marginBottom","fontSize","query"],"mappings":"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","file":"component---src-pages-styles-colors-tsx-9664d86749ff71e7c1de.js","sourcesContent":["import React from 'react';\nimport { StaticIcon } from 'suomifi-ui-components';\n\nexport default (t) => ({\n  title: t('styles:title'),\n  icon: <StaticIcon icon=\"magicWand\" />,\n  items: [\n    {\n      to: '/styles/',\n      showAsTo: '/styles/info/',\n      label: t('styles:info.title'),\n    },\n    { to: '/styles/icons/', label: t('icons:title') },\n    { to: '/styles/typography/', label: t('typography:title') },\n    { to: '/styles/colors/', label: t('colors:title') },\n  ],\n});\n","import React from 'react';\nimport { suomifiDesignTokens } from 'suomifi-ui-components';\n\nimport { Heading, Text } from 'components/ResponsiveComponents';\n\nconst NoteBox = ({ title, items }: Props): JSX.Element => (\n  <section\n    style={{\n      background: suomifiDesignTokens.colors.highlightLight3,\n      margin: `${suomifiDesignTokens.spacing.xl} 0`,\n      padding: suomifiDesignTokens.spacing.m,\n      border: `1px solid ${suomifiDesignTokens.colors.depthLight1}`,\n    }}\n  >\n    <Heading variant=\"h3\" as=\"h2\">\n      {title}\n    </Heading>\n    <ul\n      style={{ margin: 0, padding: `0 0 0 ${suomifiDesignTokens.spacing.s}` }}\n    >\n      {items.map(\n        (item, index) =>\n          !!item && (\n            <li key={index} style={{ margin: suomifiDesignTokens.spacing.m }}>\n              <Text>{item}</Text>\n            </li>\n          ),\n      )}\n    </ul>\n  </section>\n);\n\ninterface Props {\n  title: string;\n  items: string[];\n}\n\nexport default NoteBox;\n","import React, { CSSProperties } from 'react';\nimport { graphql } from 'gatsby';\nimport { Translation } from 'react-i18next';\nimport { withI18next } from '@wapps/gatsby-plugin-i18next';\nimport { suomifiDesignTokens } from 'suomifi-ui-components';\nimport { getLuminance } from 'polished';\n\nimport Layout from 'components/layout';\nimport SEO from 'components/seo';\nimport ComponentDescription from 'components/ComponentDescription';\nimport sideNavData from 'config/sidenav/styles';\nimport NoteBox from 'components/NoteBox';\nimport Section, { Props as SectionProps } from 'components/Section';\nimport ComponentExample from 'components/ComponentExample';\nimport { Heading, Text, Paragraph } from 'components/ResponsiveComponents';\n\nconst colorTokens =\n  !!suomifiDesignTokens && !!suomifiDesignTokens.colors\n    ? suomifiDesignTokens.colors\n    : { depthLight1: undefined };\n\nconst borderForLightColor = `1px solid ${colorTokens.depthLight1}`;\n\ntype ColorKeys = keyof typeof suomifiDesignTokens.colors;\ninterface ColorItem {\n  name: string;\n  value: string;\n  border: string;\n}\ntype colorTypes = { [key in ColorKeys]?: ColorItem };\nconst colors: colorTypes = Object.entries(colorTokens).reduce(\n  (obj, [key, value]: [ColorKeys, string]) => ({\n    ...obj,\n    [key]: {\n      name: key,\n      value,\n      border:\n        getLuminance(value) > getLuminance('#f8f8f8')\n          ? borderForLightColor\n          : '0',\n    },\n  }),\n  {},\n);\n\nconst colorCategories = [\n  {\n    id: 'textColors',\n    colors: [\n      colors.blackBase,\n      colors.blackLight1,\n      colors.depthBase,\n      colors.depthDark1,\n    ],\n  },\n  { id: 'brandColors', colors: [colors.brandBase] },\n  {\n    id: 'controlColors',\n    colors: [\n      colors.highlightBase,\n      colors.highlightLight1,\n      colors.highlightLight2,\n      colors.highlightLight3,\n      colors.highlightDark1,\n      colors.depthBase,\n      colors.depthLight2,\n      colors.depthDark1,\n      colors.accentBase,\n      colors.accentTertiaryDark1,\n    ],\n  },\n  {\n    id: 'iconColors',\n    colors: [colors.accentBase, colors.depthBase, colors.depthDark1],\n  },\n  {\n    id: 'backgroundColors',\n    colors: [\n      colors.whiteBase,\n      colors.depthLight3,\n      colors.depthLight1,\n      colors.highlightLight2,\n      colors.highlightLight3,\n      colors.highlightLight4,\n      colors.depthSecondary,\n      colors.depthSecondaryDark1,\n    ],\n  },\n  {\n    id: 'trafficColors',\n    colors: [\n      colors.successBase,\n      colors.successSecondary,\n      colors.warningBase,\n      colors.alertBase,\n      colors.alertLight1,\n    ],\n  },\n  {\n    id: 'accentColors',\n    colors: [\n      colors.accentBase,\n      colors.accentSecondary,\n      colors.accentSecondaryLight1,\n      colors.accentTertiary,\n    ],\n  },\n];\n\nconst getExampleColor = (\n  id: string,\n  name: string,\n  value: string,\n  label: string,\n  style?: CSSProperties,\n): JSX.Element => (\n  <div\n    key={id}\n    style={{\n      margin: `${suomifiDesignTokens.spacing.xs} ${suomifiDesignTokens.spacing.xl} ${suomifiDesignTokens.spacing.xl} 0`,\n      lineHeight: '1rem',\n    }}\n  >\n    <div\n      style={{\n        width: '10rem',\n        height: '3rem',\n        marginBottom: suomifiDesignTokens.spacing.s,\n        background: value,\n        ...style,\n      }}\n    />\n    <div style={{ fontSize: '.8rem' }}>{label}</div>\n    <div style={{ fontSize: '.8rem' }}>{value}</div>\n    <div style={{ fontSize: '.8rem' }}>{name}</div>\n  </div>\n);\n\nconst Page = (): JSX.Element => (\n  <Translation ns={['colors']}>\n    {(t) => (\n      <Layout sideNavData={sideNavData(t)}>\n        <SEO title={t('title')} />\n        <Heading variant=\"h1\">{t('title')}</Heading>\n\n        <Paragraph.lead>\n          <Text.lead>{t('intro')}</Text.lead>\n        </Paragraph.lead>\n\n        <NoteBox title={t('note.title')} items={t('note.items')} />\n\n        {t<SectionProps[]>('sections').map((section, index) => (\n          <Section\n            key={index}\n            mainTitle={section.title}\n            paragraphs={section.paragraphs}\n            links={section.links}\n          />\n        ))}\n\n        {colorCategories.map((item) => (\n          <ComponentDescription\n            key={item.id}\n            mainTitle={t(`${item.id}.title`)}\n            description={t(`${item.id}.description`)}\n            exampleFirst={false}\n            noCode\n          >\n            <ComponentExample\n              style={{\n                padding: 0,\n                justifyContent: 'flex-start',\n                background: 'none',\n                border: 'none',\n              }}\n            >\n              {item.colors.map((color, index) =>\n                getExampleColor(\n                  `${item.id}.${index}`,\n                  color.name,\n                  color.value,\n                  t(`${color.name}.label`),\n                  { border: color.border },\n                ),\n              )}\n            </ComponentExample>\n          </ComponentDescription>\n        ))}\n      </Layout>\n    )}\n  </Translation>\n);\n\nexport default withI18next()(Page);\n\nexport const query = graphql`\n  query($lng: String!) {\n    ...AllLocalesFragment\n  }\n`;\n"],"sourceRoot":""}