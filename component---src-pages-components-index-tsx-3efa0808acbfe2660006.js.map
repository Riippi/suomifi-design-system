{"version":3,"sources":["webpack:///./src/examples/components.js","webpack:///./src/examples/customTheme.js","webpack:///./src/examples/componentsAdvanced.js","webpack:///./src/pages/components/index.tsx","webpack:///./src/components/CodeExampleUtil.ts"],"names":["Example","gradients","suomifiDesignTokens","highlightBase","highlightLight4","highlightDark9","customTheme","CustomButton","styled","Button","background","theme","className","withI18next","data","ns","t","sideNavData","title","h1","lead","map","section","index","Section","key","mainTitle","paragraphs","links","ComponentDescription","description","exampleFirst","showOnlyCodeString","codeString","getExample","ComponentExample","query","name","examples","edges","find","node","content"],"mappings":"8NAGaA,EAAU,kBAAM,kBAAC,IAAD,iB,oCCDvBC,EAAS,iBAAQC,sBAAoBD,WAC3CA,EAAUE,cAAgB,UAC1BF,EAAUG,gBAAkB,UAC5BH,EAAUI,eAAiB,UAEpB,IAAMC,EAAW,iBAAQJ,sBAAR,CAA6BD,cCY/CM,G,UAAeC,YAAOC,KAAV,uFAAGD,CAAe,CAClCE,WAAY,UACZ,UAAW,CAAEA,WAAY,WACzB,WAAY,CAAEA,WAAY,cAGfV,EAAU,kBACrB,oCACE,kBAAC,IAAD,CAAQW,MAAOL,GAAf,SACA,kBAACC,EAAD,eACA,kBAAC,IAAD,CAAQK,UAAU,kBAAlB,e,oCC7BJ,sCAgEeC,mCAhDF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,kBAAC,qBAAD,CAAoBC,GAAI,CAAC,gBACtB,SAAAC,GAAC,OACA,kBAAC,IAAD,CAAQC,YAAaA,YAAYD,IAC/B,kBAAC,IAAD,CAAKE,MAAOF,EAAE,gBACd,kBAAC,IAAQG,GAAT,KAAaH,EAAE,eAEf,kBAAC,IAAUI,KAAX,KACE,kBAAC,IAAKA,KAAN,KAAYJ,EAAE,WAGfA,EAAE,YAAYK,KAAI,SAACC,EAASC,GAAV,OACjB,kBAACC,EAAA,EAAD,CACEC,IAAKF,EACLG,UAAWJ,EAAQJ,MACnBS,WAAYL,EAAQK,WACpBC,MAAON,EAAQM,WAInB,kBAACC,EAAA,EAAD,CACEH,UAAWV,EAAE,eACbc,YAAad,EAAE,qBACfe,cAAY,EACZC,oBAAkB,EAClBC,WAAYC,YAAWpB,EAAM,eAE7B,kBAACqB,EAAA,EAAD,KACE,kBAAC,EAAD,QAIJ,kBAACN,EAAA,EAAD,CACEH,UAAWV,EAAE,uBACbc,YAAad,EAAE,6BACfe,cAAY,EACZC,oBAAkB,EAClBC,WAAYC,YAAWpB,EAAM,uBAE7B,kBAACqB,EAAA,EAAD,KACE,kBAAC,EAAD,eAxCZ,IAkDaC,EAAQ,a,8FCjDRF,EAAa,SAACpB,EAAuBuB,GAEhD,OADiBvB,EAAKwB,SAASC,MAAMC,MAAK,qBAAGC,KAAgBJ,OAASA,KAA9DI,KACIC","file":"component---src-pages-components-index-tsx-3efa0808acbfe2660006.js","sourcesContent":["import React from 'react';\nimport { Button } from 'suomifi-ui-components';\n\nexport const Example = () => <Button>Example</Button>;\n","import { suomifiDesignTokens } from 'suomifi-ui-components';\n\nconst gradients = { ...suomifiDesignTokens.gradients };\ngradients.highlightBase = '#09ae88';\ngradients.highlightLight4 = '#e97025';\ngradients.highlightDark9 = '#faaf00';\n\nexport const customTheme = { ...suomifiDesignTokens, gradients };\n","import React from 'react';\nimport { Button } from 'suomifi-ui-components';\nimport styled from 'styled-components';\n\nimport { customTheme } from './customTheme';\n\n/**\n.fi-button.button--custom {\n  background: #09ae88;\n}\n.fi-button.button--custom:hover {\n  background: #e97025;\n}\n.fi-button.button--custom:active {\n  background: #faaf00;\n}\n */\nimport './customButton.css';\n\nconst CustomButton = styled(Button)({\n  background: '#09ae88',\n  '&:hover': { background: '#e97025' },\n  '&:active': { background: '#faaf00' },\n});\n\nexport const Example = () => (\n  <>\n    <Button theme={customTheme}>Theme</Button>\n    <CustomButton>Styled</CustomButton>\n    <Button className=\"button--custom\">Classname</Button>\n  </>\n);\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { NamespacesConsumer } from 'react-i18next';\nimport { withI18next } from '@wapps/gatsby-plugin-i18next';\n\nimport Layout from 'components/layout';\nimport SEO from 'components/seo';\nimport sideNavData from 'config/sidenav/components';\nimport ComponentDescription from 'components/ComponentDescription';\nimport ComponentExample from 'components/ComponentExample';\nimport { Example } from 'examples/components';\nimport { Example as ExampleAdvanced } from 'examples/componentsAdvanced';\nimport { getExample, CodeExampleData } from 'components/CodeExampleUtil';\nimport { Heading, Text, Paragraph } from 'components/ResponsiveComponents';\nimport Section from 'components/Section';\n\nconst Page = ({ data }: { data: CodeExampleData }): JSX.Element => (\n  <NamespacesConsumer ns={['components']}>\n    {t => (\n      <Layout sideNavData={sideNavData(t)}>\n        <SEO title={t('info.title')} />\n        <Heading.h1>{t('info.title')}</Heading.h1>\n\n        <Paragraph.lead>\n          <Text.lead>{t('intro')}</Text.lead>\n        </Paragraph.lead>\n\n        {t('sections').map((section, index) => (\n          <Section\n            key={index}\n            mainTitle={section.title}\n            paragraphs={section.paragraphs}\n            links={section.links}\n          />\n        ))}\n\n        <ComponentDescription\n          mainTitle={t('usage.title')}\n          description={t('usage.description')}\n          exampleFirst\n          showOnlyCodeString\n          codeString={getExample(data, 'components')}\n        >\n          <ComponentExample>\n            <Example />\n          </ComponentExample>\n        </ComponentDescription>\n\n        <ComponentDescription\n          mainTitle={t('advancedUsage.title')}\n          description={t('advancedUsage.description')}\n          exampleFirst\n          showOnlyCodeString\n          codeString={getExample(data, 'componentsAdvanced')}\n        >\n          <ComponentExample>\n            <ExampleAdvanced />\n          </ComponentExample>\n        </ComponentDescription>\n      </Layout>\n    )}\n  </NamespacesConsumer>\n);\n\nexport default withI18next()(Page);\n\nexport const query = graphql`\n  query($lng: String!) {\n    ...AllLocalesFragment\n    ...ExamplesFragment\n  }\n`;\n","export interface CodeExampleData {\n  examples: Examples;\n}\n\ninterface Examples {\n  edges: Edge[];\n}\n\ninterface Edge {\n  node: Node;\n}\n\ninterface Node {\n  name: string;\n  content: string;\n}\n\nexport const getExample = (data: CodeExampleData, name: string): string => {\n  const { node } = data.examples.edges.find(({ node }) => node.name === name);\n  return node.content;\n};\n"],"sourceRoot":""}