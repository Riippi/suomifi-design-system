{"version":3,"sources":["webpack:///./src/examples/styles.js","webpack:///./src/pages/styles/index.tsx","webpack:///./src/components/CodeExampleUtil.ts","webpack:///./src/config/sidenav/styles.js"],"names":["Example","style","margin","suomifiDesignTokens","spacing","l","padding","m","background","colors","highlightBase","boxShadow","panelShadow","fontSize","values","typography","bodyText","value","unit","color","whiteBase","withI18next","data","ns","t","sideNavData","title","h1","lead","map","section","index","Section","key","mainTitle","paragraphs","links","ComponentDescription","description","exampleFirst","showOnlyCodeString","codeString","getExample","ComponentExample","query","name","examples","edges","find","node","content","icon","items","to","showAsTo","label"],"mappings":"0QAIaA,EAAU,kBACrB,yBACEC,MAAO,CACLC,OAAQC,sBAAoBC,QAAQC,EACpCC,QAASH,sBAAoBC,QAAQG,EACrCC,WAAYL,sBAAoBM,OAAOC,cACvCC,UAAWC,IACXC,SACEV,sBAAoBW,OAAOC,WAAWC,SAASH,SAASI,MACxDd,sBAAoBW,OAAOC,WAAWC,SAASH,SAASK,KAC1DC,MAAOhB,sBAAoBM,OAAOW,YATtC,Y,oCCLF,sCAmDeC,mCApCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,kBAAC,qBAAD,CAAoBC,GAAI,CAAC,YACtB,SAAAC,GAAC,OACA,kBAAC,IAAD,CAAQC,YAAaA,YAAYD,IAC/B,kBAAC,IAAD,CAAKE,MAAOF,EAAE,gBACd,kBAAC,IAAQG,GAAT,KAAaH,EAAE,eAEf,kBAAC,IAAUI,KAAX,KACE,kBAAC,IAAKA,KAAN,KAAYJ,EAAE,WAGfA,EAAE,YAAYK,KAAI,SAACC,EAASC,GAAV,OACjB,kBAACC,EAAA,EAAD,CACEC,IAAKF,EACLG,UAAWJ,EAAQJ,MACnBS,WAAYL,EAAQK,WACpBC,MAAON,EAAQM,WAInB,kBAACC,EAAA,EAAD,CACEH,UAAWV,EAAE,eACbc,YAAad,EAAE,qBACfe,cAAY,EACZC,oBAAkB,EAClBC,WAAYC,YAAWpB,EAAM,WAE7B,kBAACqB,EAAA,EAAD,KACE,kBAAC,EAAD,eA5BZ,IAsCaC,EAAQ,a,8FCpCRF,EAAa,SAACpB,EAAuBuB,GAEhD,OADiBvB,EAAKwB,SAASC,MAAMC,MAAK,qBAAGC,KAAgBJ,OAASA,KAA9DI,KACIC,U,kCCnBd,qCAGe,aAAA1B,GAAC,MAAK,CACnBE,MAAOF,EAAE,gBACT2B,KAAM,kBAAC,IAAD,CAAYA,KAAK,cACvBC,MAAO,CACL,CACEC,GAAI,WACJC,SAAU,gBACVC,MAAO/B,EAAE,sBAEX,CAAE6B,GAAI,iBAAkBE,MAAO/B,EAAE,gBACjC,CAAE6B,GAAI,sBAAuBE,MAAO/B,EAAE,qBACtC,CAAE6B,GAAI,kBAAmBE,MAAO/B,EAAE","file":"component---src-pages-styles-index-tsx-aa66abc92c77f48592b7.js","sourcesContent":["import React from 'react';\nimport { suomifiDesignTokens } from 'suomifi-ui-components';\nimport { panelShadow } from '../components/utils/shadow';\n\nexport const Example = () => (\n  <div\n    style={{\n      margin: suomifiDesignTokens.spacing.l,\n      padding: suomifiDesignTokens.spacing.m,\n      background: suomifiDesignTokens.colors.highlightBase,\n      boxShadow: panelShadow,\n      fontSize:\n        suomifiDesignTokens.values.typography.bodyText.fontSize.value +\n        suomifiDesignTokens.values.typography.bodyText.fontSize.unit,\n      color: suomifiDesignTokens.colors.whiteBase,\n    }}\n  >\n    Example\n  </div>\n);\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { NamespacesConsumer } from 'react-i18next';\nimport { withI18next } from '@wapps/gatsby-plugin-i18next';\n\nimport Layout from 'components/layout';\nimport SEO from 'components/seo';\nimport sideNavData from 'config/sidenav/styles';\nimport ComponentDescription from 'components/ComponentDescription';\nimport ComponentExample from 'components/ComponentExample';\nimport { Example } from 'examples/styles';\nimport { getExample, CodeExampleData } from 'components/CodeExampleUtil';\nimport { Heading, Text, Paragraph } from 'components/ResponsiveComponents';\nimport Section from 'components/Section';\n\nconst Page = ({ data }: { data: CodeExampleData }): JSX.Element => (\n  <NamespacesConsumer ns={['styles']}>\n    {t => (\n      <Layout sideNavData={sideNavData(t)}>\n        <SEO title={t('info.title')} />\n        <Heading.h1>{t('info.title')}</Heading.h1>\n\n        <Paragraph.lead>\n          <Text.lead>{t('intro')}</Text.lead>\n        </Paragraph.lead>\n\n        {t('sections').map((section, index) => (\n          <Section\n            key={index}\n            mainTitle={section.title}\n            paragraphs={section.paragraphs}\n            links={section.links}\n          />\n        ))}\n\n        <ComponentDescription\n          mainTitle={t('usage.title')}\n          description={t('usage.description')}\n          exampleFirst\n          showOnlyCodeString\n          codeString={getExample(data, 'styles')}\n        >\n          <ComponentExample>\n            <Example />\n          </ComponentExample>\n        </ComponentDescription>\n      </Layout>\n    )}\n  </NamespacesConsumer>\n);\n\nexport default withI18next()(Page);\n\nexport const query = graphql`\n  query($lng: String!) {\n    ...AllLocalesFragment\n    ...ExamplesFragment\n  }\n`;\n","export interface CodeExampleData {\n  examples: Examples;\n}\n\ninterface Examples {\n  edges: Edge[];\n}\n\ninterface Edge {\n  node: Node;\n}\n\ninterface Node {\n  name: string;\n  content: string;\n}\n\nexport const getExample = (data: CodeExampleData, name: string): string => {\n  const { node } = data.examples.edges.find(({ node }) => node.name === name);\n  return node.content;\n};\n","import React from 'react';\nimport { StaticIcon } from 'suomifi-ui-components';\n\nexport default t => ({\n  title: t('styles:title'),\n  icon: <StaticIcon icon=\"magicWand\" />,\n  items: [\n    {\n      to: '/styles/',\n      showAsTo: '/styles/info/',\n      label: t('styles:info.title'),\n    },\n    { to: '/styles/icons/', label: t('icons:title') },\n    { to: '/styles/typography/', label: t('typography:title') },\n    { to: '/styles/colors/', label: t('colors:title') },\n  ],\n});\n"],"sourceRoot":""}