{"version":3,"sources":["webpack:///./src/pages/components/toggle.tsx","webpack:///./src/config/sidenav/components.js","webpack:///./src/components/NoteBox.tsx"],"names":["ToggleButton","displayName","ToggleInput","withI18next","useState","isButtonChecked","setButtonChecked","isInputChecked","setInputChecked","getButtonAriaLabelText","t","name","getInputAriaLabelText","ns","sideNavData","title","variant","lead","mainTitle","description","style","flexDirection","alignItems","justifyContent","height","suomifiDesignTokens","spacing","xxxxl","aria-label","onClick","checked","onChange","items","map","section","index","key","paragraphs","links","query","icon","to","showAsTo","label","NoteBox","background","colors","highlightLight3","margin","xl","padding","m","border","depthLight1","as","s","item"],"mappings":"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","file":"component---src-pages-components-toggle-tsx-475284bd1a1eec6ede17.js","sourcesContent":["import React, { useState } from 'react';\nimport { graphql } from 'gatsby';\nimport { Translation } from 'react-i18next';\nimport { withI18next } from '@wapps/gatsby-plugin-i18next';\nimport {\n  ToggleButton,\n  ToggleInput,\n  suomifiDesignTokens,\n} from 'suomifi-ui-components';\n\nimport Layout from 'components/layout';\nimport SEO from 'components/seo';\nimport ComponentDescription from 'components/ComponentDescription';\nimport sideNavData from 'config/sidenav/components';\nimport NoteBox from 'components/NoteBox';\nimport Section, { Props as SectionProps } from 'components/Section';\nimport ComponentExample from 'components/ComponentExample';\nimport { Heading, Text, Paragraph } from 'components/ResponsiveComponents';\n\nToggleButton.displayName = 'ToggleButton';\nToggleInput.displayName = 'ToggleInput';\n\nconst Page: React.FC = (): React.ReactElement => {\n  const [isButtonChecked, setButtonChecked] = useState(false);\n  const [isInputChecked, setInputChecked] = useState(false);\n\n  const getButtonAriaLabelText = (t: Function): string => {\n    return t(`toggle.state.${isButtonChecked ? 'on' : 'off'}`, {\n      name: t('toggle.label.button'),\n    });\n  };\n\n  const getInputAriaLabelText = (t: Function): string => {\n    return t(`toggle.state.${isInputChecked ? 'on' : 'off'}`);\n  };\n\n  const handleButtonClick = (newState: boolean): void => {\n    setButtonChecked(newState);\n  };\n\n  const handleInputChange = (newState: boolean): void => {\n    setInputChecked(newState);\n  };\n\n  return (\n    <Translation ns={['toggle']}>\n      {(t) => (\n        <Layout sideNavData={sideNavData(t)}>\n          <SEO title={t('title')} />\n          <Heading variant=\"h1\">{t('title')}</Heading>\n\n          <Paragraph.lead>\n            <Text.lead>{t('intro')}</Text.lead>\n          </Paragraph.lead>\n\n          <ComponentDescription\n            mainTitle={t('default.title')}\n            description={t('default.description')}\n          >\n            <ComponentExample\n              style={{\n                flexDirection: 'column',\n                alignItems: 'flex-start',\n                justifyContent: 'space-between',\n                height: `${suomifiDesignTokens.spacing.xxxxl}`,\n              }}\n            >\n              <ToggleButton\n                aria-label={getButtonAriaLabelText(t)}\n                onClick={(checked) => handleButtonClick(checked)}\n                checked={isButtonChecked}\n              >\n                {t('toggle.label.button')}\n              </ToggleButton>\n\n              <ToggleInput\n                aria-label={getInputAriaLabelText(t)}\n                onChange={(checked) => handleInputChange(checked)}\n                checked={isInputChecked}\n              >\n                {t('toggle.label.input')}\n              </ToggleInput>\n            </ComponentExample>\n          </ComponentDescription>\n          <NoteBox title={t('note.title')} items={t('note.items')} />\n\n          {t<SectionProps[]>('sections').map((section, index) => (\n            <Section\n              key={index}\n              mainTitle={section.title}\n              paragraphs={section.paragraphs}\n              links={section.links}\n            />\n          ))}\n        </Layout>\n      )}\n    </Translation>\n  );\n};\n\nexport default withI18next()(Page);\n\nexport const query = graphql`\n  query($lng: String!) {\n    ...AllLocalesFragment\n  }\n`;\n","import React from 'react';\nimport { StaticIcon } from 'suomifi-ui-components';\n\nexport default (t) => ({\n  title: t('components:title'),\n  icon: <StaticIcon icon=\"puzzle\" />,\n  items: [\n    {\n      to: '/components/',\n      showAsTo: '/components/info/',\n      label: t('components:info.title'),\n    },\n    { to: '/components/searchinput/', label: t('searchinput:title') },\n    { to: '/components/icon/', label: t('icon:title') },\n    { to: '/components/languagemenu/', label: t('languagemenu:title') },\n    { to: '/components/expander/', label: t('expander:title') },\n    { to: '/components/link/', label: t('link:title') },\n    { to: '/components/block/', label: t('block:title') },\n    { to: '/components/breadcrumb/', label: t('breadcrumb:title') },\n    { to: '/components/heading/', label: t('heading:title') },\n    { to: '/components/button/', label: t('button:title') },\n    { to: '/components/dropdown/', label: t('dropdown:title') },\n    { to: '/components/text/', label: t('text:title') },\n    { to: '/components/textarea/', label: t('textarea:title') },\n    { to: '/components/textinput/', label: t('textinput:title') },\n    { to: '/components/toggle/', label: t('toggle:title') },\n    { to: '/components/radiobutton/', label: t('radiobutton:title') },\n    { to: '/components/checkbox/', label: t('checkbox:title') },\n    // { to: '/components/multiselect/', label: t('multiselect:title') },\n  ],\n});\n","import React from 'react';\nimport { suomifiDesignTokens } from 'suomifi-ui-components';\n\nimport { Heading, Text } from 'components/ResponsiveComponents';\n\nconst NoteBox = ({ title, items }: Props): JSX.Element => (\n  <section\n    style={{\n      background: suomifiDesignTokens.colors.highlightLight3,\n      margin: `${suomifiDesignTokens.spacing.xl} 0`,\n      padding: suomifiDesignTokens.spacing.m,\n      border: `1px solid ${suomifiDesignTokens.colors.depthLight1}`,\n    }}\n  >\n    <Heading variant=\"h3\" as=\"h2\">\n      {title}\n    </Heading>\n    <ul\n      style={{ margin: 0, padding: `0 0 0 ${suomifiDesignTokens.spacing.s}` }}\n    >\n      {items.map(\n        (item, index) =>\n          !!item && (\n            <li key={index} style={{ margin: suomifiDesignTokens.spacing.m }}>\n              <Text>{item}</Text>\n            </li>\n          ),\n      )}\n    </ul>\n  </section>\n);\n\ninterface Props {\n  title: string;\n  items: string[];\n}\n\nexport default NoteBox;\n"],"sourceRoot":""}