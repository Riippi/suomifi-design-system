{"version":3,"sources":["webpack:///./src/pages/components/dropdown.tsx","webpack:///./src/config/sidenav/components.js","webpack:///./src/components/NoteBox.tsx","webpack:///./src/components/NotificationBox.tsx"],"names":["Dropdown","displayName","withI18next","ns","t","sideNavData","title","variant","notificationText","lead","mainTitle","description","name","labelText","value","items","map","section","index","key","paragraphs","links","visualPlaceholder","alwaysShowVisualPlaceholder","onChange","action","console","log","query","icon","to","showAsTo","label","NoteBox","style","background","suomifiDesignTokens","colors","highlightLight3","margin","spacing","xl","padding","m","border","depthLight1","as","s","item","NotificationBox","display","justifyContent","alignItems","flexWrap","accentSecondaryLight1","fontSize","color","accentSecondary","bold","marginLeft","verticalAlign","values","typography","bodyText","unit"],"mappings":"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","file":"component---src-pages-components-dropdown-tsx-f0d6fb38e4d59899a33f.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport { Translation } from 'react-i18next';\nimport { withI18next } from '@wapps/gatsby-plugin-i18next';\nimport { Dropdown, DropdownItem } from 'suomifi-ui-components';\n\nimport Layout from 'components/layout';\nimport SEO from 'components/seo';\nimport ComponentDescription from 'components/ComponentDescription';\nimport sideNavData from 'config/sidenav/components';\nimport NoteBox from 'components/NoteBox';\nimport Section, { Props as SectionProps } from 'components/Section';\nimport ComponentExample from 'components/ComponentExample';\nimport NotificationBox from 'components/NotificationBox';\nimport { Heading, Text, Paragraph } from 'components/ResponsiveComponents';\n\nDropdown.displayName = 'Dropdown';\n\nconst Page = (): JSX.Element => (\n  <Translation ns={['dropdown']}>\n    {(t) => (\n      <Layout sideNavData={sideNavData(t)}>\n        <SEO title={t('title')} />\n        <Heading variant=\"h1\">{t('title')}</Heading>\n        <NotificationBox notificationText={t('notification.content')} />\n\n        <Paragraph.lead>\n          <Text.lead>{t('intro')}</Text.lead>\n        </Paragraph.lead>\n\n        <ComponentDescription\n          mainTitle={t('example.title')}\n          description={t('example.description')}\n        >\n          <ComponentExample>\n            <Dropdown name=\"Dropdown\" labelText={t('example.label')}>\n              <DropdownItem value=\"1\">{t('example.option1')}</DropdownItem>\n              <DropdownItem value=\"2\">{t('example.option2')}</DropdownItem>\n              <DropdownItem value=\"3\">{t('example.option3')}</DropdownItem>\n            </Dropdown>\n          </ComponentExample>\n        </ComponentDescription>\n\n        <NoteBox title={t('note.title')} items={t('note.items')} />\n\n        {t<SectionProps[]>('sections').map((section, index) => (\n          <Section\n            key={index}\n            mainTitle={section.title}\n            paragraphs={section.paragraphs}\n            links={section.links}\n          />\n        ))}\n\n        <ComponentDescription\n          mainTitle={t('example1.title')}\n          description={t('example1.description')}\n        >\n          <ComponentExample>\n            <Dropdown\n              visualPlaceholder={t('example1.placeholder')}\n              alwaysShowVisualPlaceholder\n              labelText={t('example1.label')}\n              onChange={(action) => console.log(action, 'selected')}\n            >\n              <DropdownItem value=\"Toiminto1\">\n                {t('example1.option1')}\n              </DropdownItem>\n              <DropdownItem value=\"Toiminto2\">\n                {t('example1.option2')}\n              </DropdownItem>\n            </Dropdown>\n          </ComponentExample>\n        </ComponentDescription>\n      </Layout>\n    )}\n  </Translation>\n);\n\nexport default withI18next()(Page);\n\nexport const query = graphql`\n  query($lng: String!) {\n    ...AllLocalesFragment\n  }\n`;\n","import React from 'react';\nimport { StaticIcon } from 'suomifi-ui-components';\n\nexport default (t) => ({\n  title: t('components:title'),\n  icon: <StaticIcon icon=\"puzzle\" />,\n  items: [\n    {\n      to: '/components/',\n      showAsTo: '/components/info/',\n      label: t('components:info.title'),\n    },\n    { to: '/components/searchinput/', label: t('searchinput:title') },\n    { to: '/components/icon/', label: t('icon:title') },\n    { to: '/components/languagemenu/', label: t('languagemenu:title') },\n    { to: '/components/expander/', label: t('expander:title') },\n    { to: '/components/link/', label: t('link:title') },\n    { to: '/components/block/', label: t('block:title') },\n    { to: '/components/breadcrumb/', label: t('breadcrumb:title') },\n    { to: '/components/heading/', label: t('heading:title') },\n    { to: '/components/button/', label: t('button:title') },\n    { to: '/components/dropdown/', label: t('dropdown:title') },\n    { to: '/components/text/', label: t('text:title') },\n    { to: '/components/textarea/', label: t('textarea:title') },\n    { to: '/components/textinput/', label: t('textinput:title') },\n    { to: '/components/toggle/', label: t('toggle:title') },\n    { to: '/components/radiobutton/', label: t('radiobutton:title') },\n    { to: '/components/checkbox/', label: t('checkbox:title') },\n    { to: '/components/multiselect/', label: t('multiselect:title') },\n  ],\n});\n","import React from 'react';\nimport { suomifiDesignTokens } from 'suomifi-ui-components';\n\nimport { Heading, Text } from 'components/ResponsiveComponents';\n\nconst NoteBox = ({ title, items }: Props): JSX.Element => (\n  <section\n    style={{\n      background: suomifiDesignTokens.colors.highlightLight3,\n      margin: `${suomifiDesignTokens.spacing.xl} 0`,\n      padding: suomifiDesignTokens.spacing.m,\n      border: `1px solid ${suomifiDesignTokens.colors.depthLight1}`,\n    }}\n  >\n    <Heading variant=\"h3\" as=\"h2\">\n      {title}\n    </Heading>\n    <ul\n      style={{ margin: 0, padding: `0 0 0 ${suomifiDesignTokens.spacing.s}` }}\n    >\n      {items.map(\n        (item, index) =>\n          !!item && (\n            <li key={index} style={{ margin: suomifiDesignTokens.spacing.m }}>\n              <Text>{item}</Text>\n            </li>\n          ),\n      )}\n    </ul>\n  </section>\n);\n\ninterface Props {\n  title: string;\n  items: string[];\n}\n\nexport default NoteBox;\n","import React, { CSSProperties } from 'react';\nimport { suomifiDesignTokens, Icon } from 'suomifi-ui-components';\nimport { Text } from 'components/ResponsiveComponents';\nimport { Translation } from 'react-i18next';\n\ninterface Props {\n  style?: CSSProperties;\n  notificationText?: string;\n}\n\nconst NotificationBox = ({ style, notificationText }: Props): JSX.Element => (\n  <Translation>\n    {(t) => (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexWrap: 'wrap',\n          padding: suomifiDesignTokens.spacing.xl,\n          margin: `${suomifiDesignTokens.spacing.s} 0`,\n          ...style,\n          background: suomifiDesignTokens.colors.accentSecondaryLight1,\n          fontSize: '24px',\n        }}\n      >\n        <Icon icon=\"error\" color={suomifiDesignTokens.colors.accentSecondary} />\n        <Text.bold\n          style={{\n            marginLeft: suomifiDesignTokens.spacing.s,\n            verticalAlign: 'middle',\n            fontSize:\n              suomifiDesignTokens.values.typography.bodyText.fontSize.value +\n              suomifiDesignTokens.values.typography.bodyText.fontSize.unit,\n          }}\n        >\n          {notificationText || t('common:work.in.progress.warning')}\n        </Text.bold>\n      </div>\n    )}\n  </Translation>\n);\n\nNotificationBox.displayName = 'div';\n\nexport default NotificationBox;\n"],"sourceRoot":""}