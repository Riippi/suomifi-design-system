{"version":3,"sources":["webpack:///./src/components/ExampleComponentUtil.tsx","webpack:///./src/components/ExampleComponents.tsx","webpack:///./src/components/ComponentExample.tsx","webpack:///./src/components/ComponentDescription.tsx","webpack:///./src/pages/components/button.tsx","webpack:///./src/config/sidenav/components.js"],"names":["Comp","displayName","Button","_Component","apply","this","arguments","inheritsLoose_default","prototype","render","Object","core_browser_esm","Button_Button","props","Component","variants","OrigButton","keys","map","key","_ref","Wrapper","getComponentWithDisplayName","reduce","obj","item","assign","negative","secondary","secondarySmall","secondaryNoborder","tertiary","ComponentExample","children","style","margin","prism","language","reactElementToJSXString","filterProps","showFunctions","functionValue","ComponentDescription","title","description","es","t","borderBottom","marginBottom","marginTop","components_ComponentExample","withI18next","ns","layout","sideNavData","seo","id","comp","background","components_ComponentDescription","display","justifyContent","alignItems","flexWrap","padding","suomifiTheme","colors","secondaryColor","icon","iconRight","disabled","query","__webpack_exports__","items","to","label"],"mappings":"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","file":"component---src-pages-components-button-tsx-e257c75280d0a830e66d.js","sourcesContent":["import React, { ReactNode } from 'react'\r\n\r\nconst getComponentWithDisplayName = (\r\n  Comp: Function,\r\n  displayName: string\r\n): Function => {\r\n  const Wrapper = (props): JSX.Element => <Comp {...props} />\r\n  Wrapper.displayName = displayName\r\n  return Wrapper\r\n}\r\n\r\nexport const getVariants = (\r\n  Comp: ReactNode,\r\n  displayName: string\r\n): Record<string, Function> =>\r\n  Object.keys(Comp)\r\n    .map(key => ({\r\n      [key]: getComponentWithDisplayName(Comp[key], `${displayName}.${key}`)\r\n    }))\r\n    .reduce((obj, item) => ({ ...obj, ...item }), {})\r\n","import React, { Component } from 'react'\r\nimport { Button as OrigButton, ButtonProps } from 'suomifi-ui-components'\r\nimport { getVariants } from './ExampleComponentUtil'\r\n\r\nexport class Button extends Component<ButtonProps> {\r\n  public static displayName = 'Button'\r\n\r\n  private static variants = getVariants(OrigButton, Button.displayName)\r\n  public static negative = Button.variants.negative\r\n  public static secondary = Button.variants.secondary\r\n  public static secondarySmall = Button.variants.secondarySmall\r\n  public static secondaryNoborder = Button.variants.secondaryNoborder\r\n  public static tertiary = Button.variants.tertiary\r\n\r\n  public render(): JSX.Element {\r\n    return <OrigButton {...this.props} />\r\n  }\r\n}\r\n","import React, { ReactNode } from 'react'\nimport reactElementToJSXString from 'react-element-to-jsx-string'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\n\nconst ComponentExample = ({ children }: Props): JSX.Element => (\n  <div style={{ margin: '1rem 0' }}>\n    <SyntaxHighlighter language='jsx'>\n      {reactElementToJSXString(children, {\n        filterProps: ['style'],\n        showFunctions: true,\n        functionValue: () => '...'\n      })}\n    </SyntaxHighlighter>\n  </div>\n)\n\ninterface Props {\n  children: ReactNode\n}\n\nexport default ComponentExample\n","import React, { ReactNode } from 'react'\nimport { NamespacesConsumer } from 'react-i18next'\nimport ComponentExample from './ComponentExample'\n\nconst ComponentDescription = ({\n  title,\n  description,\n  children\n}: Props): JSX.Element => (\n  <NamespacesConsumer>\n    {t => (\n      <div\n        style={{\n          borderBottom: '1px solid #C9CDCF',\n          marginBottom: '3rem'\n        }}>\n        {children}\n        <div style={{ marginTop: '1rem' }}>{description}</div>\n        <ComponentExample>{children}</ComponentExample>\n      </div>\n    )}\n  </NamespacesConsumer>\n)\n\ninterface Props {\n  title?: string\n  description: string\n  children: ReactNode\n}\n\nexport default ComponentDescription\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport { NamespacesConsumer } from 'react-i18next'\nimport { withI18next } from '@wapps/gatsby-plugin-i18next'\nimport { suomifiTheme } from 'suomifi-ui-components'\n\nimport Layout from '../../components/layout'\nimport SEO from '../../components/seo'\nimport { Button } from '../../components/ExampleComponents'\nimport ComponentDescription from '../../components/ComponentDescription'\nimport sideNavData from '../../config/sidenav/components'\n\nconst Page = (): JSX.Element => (\n  <NamespacesConsumer ns={['button']}>\n    {t => (\n      <Layout sideNavData={sideNavData(t)}>\n        <SEO title={t('title')} description='' />\n        <h1>{t('title')}</h1>\n\n        {[\n          { id: 'primary', comp: Button },\n          { id: 'secondary', comp: Button.secondary },\n          { id: 'tertiary', comp: Button.tertiary },\n          {\n            id: 'secondaryNoborder',\n            comp: Button.secondaryNoborder,\n            background: true\n          },\n          {\n            id: 'negative',\n            comp: Button.negative,\n            background: true\n          }\n        ].map(item => (\n          <ComponentDescription\n            key={item.id}\n            title={t(`${item.id}.title`)}\n            description={t(`${item.id}.description`)}>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                flexWrap: 'wrap',\n                padding: '1rem',\n                background: item.background\n                  ? suomifiTheme.colors.secondaryColor\n                  : 'none'\n              }}>\n              <item.comp style={{ margin: '.5rem' }}>\n                {t(`${item.id}.title`)}\n              </item.comp>\n              <item.comp style={{ margin: '.5rem' }} icon='login'>\n                {t('icon.title')}\n              </item.comp>\n              <item.comp style={{ margin: '.5rem' }} iconRight='login'>\n                {t('iconRight.title')}\n              </item.comp>\n              <item.comp style={{ margin: '.5rem' }} disabled>\n                {t('disabled.title')}\n              </item.comp>\n            </div>\n          </ComponentDescription>\n        ))}\n      </Layout>\n    )}\n  </NamespacesConsumer>\n)\n\nexport default withI18next()(Page)\n\nexport const query = graphql`\n  query($lng: String!) {\n    ...AllLocalesFragment\n  }\n`\n","export default t => ({\r\n  title: t('components:title'),\r\n  items: [{ to: '/components/button/', label: t('button:title') }]\r\n})\r\n"],"sourceRoot":""}