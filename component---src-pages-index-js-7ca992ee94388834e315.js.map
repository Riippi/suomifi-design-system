{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["withI18next","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react_i18next__WEBPACK_IMPORTED_MODULE_2__","ns","t","_components_layout__WEBPACK_IMPORTED_MODULE_4___default","a","_components_seo__WEBPACK_IMPORTED_MODULE_5__","title","keywords","query","SEO","_ref","description","meta","react_i18next__WEBPACK_IMPORTED_MODULE_4__","_ref2","i18n","metaDescription","lang","language","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"kMAmBeA,kCAXG,kBAChBC,OAAAC,EAAA,EAAAD,CAACE,EAAA,mBAAD,CAAoBC,GAAI,CAAC,SACtB,SAAAC,GAAC,OACAJ,OAAAC,EAAA,EAAAD,CAACK,EAAAC,EAAD,KACEN,OAAAC,EAAA,EAAAD,CAACO,EAAA,QAAD,CAAKC,MAAOJ,EAAE,SAAUK,SAAU,mCAClCT,OAAAC,EAAA,EAAAD,CAAA,UAAKI,EAAE,eAQR,IAAMM,EAAK,kHChBlB,SAASC,EAATC,GAAqD,IAAtCC,EAAsCD,EAAtCC,YAAaC,EAAyBF,EAAzBE,KAAML,EAAmBG,EAAnBH,SAAUD,EAASI,EAATJ,MAC1C,OACER,OAAAC,EAAA,EAAAD,CAACe,EAAA,mBAAD,KACG,SAACX,EAADY,GAAiB,IAAXC,EAAWD,EAAXC,KACCC,EAAkBL,GAAeT,EAAE,oBACnCe,EAAOF,EAAKG,SAClB,OACEpB,OAAAC,EAAA,EAAAD,CAACqB,EAAAf,EAAD,CACEgB,eAAgB,CACdH,QAEFX,MAAOA,EACPe,cAAa,QAAUnB,EAAE,cACzBU,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASjB,GAEX,CACEkB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASrB,EAAE,gBAEb,CACEoB,KAAI,gBACJC,QAASjB,GAEX,CACEgB,KAAI,sBACJC,QAASP,IAGVS,OACClB,EAASmB,OAAS,EACd,CACEJ,KAAI,WACJC,QAAShB,EAASoB,KAAT,OAEX,IAELF,OAAOb,OAQtBH,EAAImB,aAAe,CACjBhB,KAAM,GACNL,SAAU,IAGZE,EAAIoB,UAAY,CACdlB,YAAamB,IAAUC,OACvBnB,KAAMkB,IAAUE,MAChBzB,SAAUuB,IAAUG,QAAQH,IAAUC,QACtCzB,MAAOwB,IAAUC,OAAOG,YAGXzB","file":"component---src-pages-index-js-7ca992ee94388834e315.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport { NamespacesConsumer } from 'react-i18next'\nimport { withI18next } from '@wapps/gatsby-plugin-i18next'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst IndexPage = () => (\n  <NamespacesConsumer ns={['home']}>\n    {t => (\n      <Layout>\n        <SEO title={t('title')} keywords={[`gatsby`, `application`, `react`]} />\n        <h1>{t('title')}</h1>\n      </Layout>\n    )}\n  </NamespacesConsumer>\n)\n\nexport default withI18next()(IndexPage)\n\nexport const query = graphql`\n  query($lng: String!) {\n    ...AllLocalesFragment\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { NamespacesConsumer } from 'react-i18next'\n\nfunction SEO({ description, meta, keywords, title }) {\n  return (\n    <NamespacesConsumer>\n      {(t, { i18n }) => {\n        const metaDescription = description || t('site:description')\n        const lang = i18n.language\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang\n            }}\n            title={title}\n            titleTemplate={`%s | ${t('site:title')}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription\n              },\n              {\n                property: `og:title`,\n                content: title\n              },\n              {\n                property: `og:description`,\n                content: metaDescription\n              },\n              {\n                property: `og:type`,\n                content: `website`\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`\n              },\n              {\n                name: `twitter:creator`,\n                content: t('site:author')\n              },\n              {\n                name: `twitter:title`,\n                content: title\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `)\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    </NamespacesConsumer>\n  )\n}\n\nSEO.defaultProps = {\n  meta: [],\n  keywords: []\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n}\n\nexport default SEO\n"],"sourceRoot":""}