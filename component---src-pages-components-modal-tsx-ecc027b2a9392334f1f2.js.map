{"version":3,"sources":["webpack:///./src/config/sidenav/components.js","webpack:///./src/pages/components/modal.tsx","webpack:///./src/components/NoteBox.tsx"],"names":["t","title","icon","items","to","showAsTo","label","ExpanderExampleContent","ns","bold","Modal","props","displayName","ModalContent","ModalTitle","ModalFooter","DefaultExample","desc","passProps","useState","visible","setVisible","2","3","checked","setChecked","saveDisabled","mainTitle","description","style","marginBottom","suomifiDesignTokens","spacing","s","onClick","appElementId","onEscKeyDown","openAllText","closeAllText","ariaOpenText","ariaCloseText","toggleButtonAriaDescribedBy","disabled","hintText","id","checkboxState","arial-label","aria-disabled","variant","ConfirmExample","noCode","scrollable","withI18next","sideNavData","lead","map","section","index","key","paragraphs","links","query","NoteBox","background","colors","highlightLight3","margin","xl","padding","m","border","depthLight1","as","item"],"mappings":"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","file":"component---src-pages-components-modal-tsx-ecc027b2a9392334f1f2.js","sourcesContent":["import React from 'react';\nimport { StaticIcon } from 'suomifi-ui-components';\n\nexport default (t) => ({\n  title: t('components:title'),\n  icon: <StaticIcon icon=\"puzzle\" />,\n  items: [\n    {\n      to: '/components/',\n      showAsTo: '/components/info/',\n      label: t('components:info.title'),\n    },\n    { to: '/components/modal/', label: t('modal:title') },\n    { to: '/components/searchinput/', label: t('searchinput:title') },\n    { to: '/components/icon/', label: t('icon:title') },\n    { to: '/components/languagemenu/', label: t('languagemenu:title') },\n    { to: '/components/expander/', label: t('expander:title') },\n    { to: '/components/link/', label: t('link:title') },\n    { to: '/components/block/', label: t('block:title') },\n    { to: '/components/multiselect/', label: t('multiselect:title') },\n    { to: '/components/breadcrumb/', label: t('breadcrumb:title') },\n    { to: '/components/heading/', label: t('heading:title') },\n    { to: '/components/button/', label: t('button:title') },\n    { to: '/components/dropdown/', label: t('dropdown:title') },\n    { to: '/components/text/', label: t('text:title') },\n    { to: '/components/textarea/', label: t('textarea:title') },\n    { to: '/components/textinput/', label: t('textinput:title') },\n    { to: '/components/toggle/', label: t('toggle:title') },\n    { to: '/components/radiobutton/', label: t('radiobutton:title') },\n    { to: '/components/checkbox/', label: t('checkbox:title') },\n  ],\n});\n","import React, { useState } from 'react';\nimport { graphql } from 'gatsby';\nimport { Translation } from 'react-i18next';\nimport { withI18next } from '@wapps/gatsby-plugin-i18next';\n\nimport Layout from 'components/layout';\nimport SEO from 'components/seo';\nimport sideNavData from 'config/sidenav/components';\nimport NoteBox from 'components/NoteBox';\nimport { Heading, Text, Paragraph } from 'components/ResponsiveComponents';\nimport ComponentDescription from 'components/ComponentDescription';\nimport Section, { Props as SectionProps } from 'components/Section';\nimport ComponentExample from 'components/ComponentExample';\nimport {\n  Modal as OrigModal,\n  ModalProps,\n  ModalContent as OrigModalContent,\n  ModalContentProps,\n  ModalTitle as OrigModalTitle,\n  ModalTitleProps,\n  ModalFooter as OrigModalFooter,\n  ModalFooterProps,\n  Button,\n  Expander,\n  ExpanderGroup,\n  ExpanderContent,\n  ExpanderTitle,\n  Checkbox,\n  suomifiDesignTokens,\n  VisuallyHidden,\n} from 'suomifi-ui-components';\n\nconst Page = (): JSX.Element => (\n  <Translation ns={['modal']}>\n    {(t) => (\n      <Layout sideNavData={sideNavData(t)}>\n        <SEO title={t('title')} />\n        <Heading variant=\"h1\">{t('title')}</Heading>\n\n        <Paragraph.lead>\n          <Text.lead>{t('intro')}</Text.lead>\n        </Paragraph.lead>\n\n        <ConfirmExample title=\"\" desc=\"\" noCode />\n\n        <NoteBox title={t('note.title')} items={t('note.items')} />\n\n        {t<SectionProps[]>('sections').map((section, index) => (\n          <Section\n            key={index}\n            mainTitle={section.title}\n            paragraphs={section.paragraphs}\n            links={section.links}\n          />\n        ))}\n\n        <ConfirmExample\n          title={t('example.confirm.heading')}\n          desc={t('example.confirm.description')}\n          noCode={false}\n        />\n\n        <DefaultExample\n          title={t('example.default.heading')}\n          desc={t('example.default.description')}\n        />\n        <DefaultExample\n          variant=\"smallScreen\"\n          title={t('example.smallScreen.heading')}\n          desc={t('example.smallScreen.description')}\n        />\n      </Layout>\n    )}\n  </Translation>\n);\n\nconst ExpanderExampleContent = (): JSX.Element => (\n  <Translation ns={['modal']}>\n    {(t) => (\n      <>\n        <Paragraph>\n          <Text.bold>{t('example.default.checkboxContentEdited')}</Text.bold>\n          <br />\n          <Text>{t('example.default.date')}</Text>\n        </Paragraph>\n        <Paragraph>\n          <Text.bold>{t('example.default.checkboxContentEditedBy')}</Text.bold>\n          <br />\n          <Text>{t('example.default.email')}</Text>\n        </Paragraph>\n      </>\n    )}\n  </Translation>\n);\n\nconst Modal = (props: ModalProps): JSX.Element => <OrigModal {...props} />;\nModal.displayName = 'Modal';\nconst ModalContent = (props: ModalContentProps): JSX.Element => (\n  <OrigModalContent {...props} />\n);\nModal.displayName = 'Modal';\nconst ModalTitle = (props: ModalTitleProps): JSX.Element => (\n  <OrigModalTitle {...props} />\n);\nModal.displayName = 'Modal';\nconst ModalFooter = (props: ModalFooterProps): JSX.Element => (\n  <OrigModalFooter {...props} />\n);\nModal.displayName = 'Modal';\n\nconst DefaultExample = ({\n  title,\n  desc,\n  ...passProps\n}: Partial<ModalProps> & { title: string; desc: string }): JSX.Element => {\n  const [visible, setVisible] = useState(false);\n  const [checked, setChecked] = useState({ 2: false, 3: false });\n\n  const saveDisabled = !checked[2] && !checked[3];\n\n  return (\n    <Translation ns={['modal']}>\n      {(t) => (\n        <ComponentDescription mainTitle={title} description={desc}>\n          <ComponentExample\n            style={{ marginBottom: suomifiDesignTokens.spacing.s }}\n          >\n            <Button onClick={() => setVisible(true)}>\n              {t('example.openText')}\n            </Button>\n            <Modal\n              {...passProps}\n              appElementId=\"___gatsby\"\n              visible={visible}\n              onEscKeyDown={() => setVisible(false)}\n            >\n              <ModalContent>\n                <ModalTitle>{t('example.default.title')}</ModalTitle>\n                <Paragraph>\n                  <Text>{t('example.default.content')}</Text>\n                </Paragraph>\n                <ExpanderGroup\n                  openAllText={t('example.default.groupOpenAll')}\n                  closeAllText={t('example.default.groupCloseAll')}\n                >\n                  <Expander>\n                    <ExpanderTitle\n                      ariaOpenText={t('example.default.ariaOpen')}\n                      ariaCloseText={t('example.default.ariaClose')}\n                      toggleButtonAriaDescribedBy=\"checkbox-id-1\"\n                    >\n                      <Checkbox\n                        disabled\n                        hintText={t('example.default.checkboxHint1')}\n                        id=\"checkbox-id-1\"\n                      >\n                        {t('example.default.checkboxLabel1')}\n                      </Checkbox>\n                    </ExpanderTitle>\n                    <ExpanderContent>\n                      <ExpanderExampleContent />\n                    </ExpanderContent>\n                  </Expander>\n                  <Expander>\n                    <ExpanderTitle\n                      ariaOpenText={t('example.default.ariaOpen')}\n                      ariaCloseText={t('example.default.ariaClose')}\n                      toggleButtonAriaDescribedBy=\"checkbox-id-2\"\n                    >\n                      <Checkbox\n                        hintText={t('example.default.checkboxHint2')}\n                        id=\"checkbox-id-2\"\n                        checked={checked[2]}\n                        onClick={({ checkboxState }) => {\n                          setChecked({ ...checked, 2: checkboxState });\n                        }}\n                      >\n                        {t('example.default.checkboxLabel2')}\n                      </Checkbox>\n                    </ExpanderTitle>\n                    <ExpanderContent>\n                      <ExpanderExampleContent />\n                    </ExpanderContent>\n                  </Expander>\n                  <Expander>\n                    <ExpanderTitle\n                      ariaOpenText={t('example.default.ariaOpen')}\n                      ariaCloseText={t('example.default.ariaClose')}\n                      toggleButtonAriaDescribedBy=\"checkbox-id-3\"\n                    >\n                      <Checkbox\n                        hintText={t('example.default.checkboxHint3')}\n                        id=\"checkbox-id-3\"\n                        checked={checked[3]}\n                        onClick={({ checkboxState }) => {\n                          setChecked({ ...checked, 3: checkboxState });\n                        }}\n                      >\n                        {t('example.default.checkboxLabel3')}\n                      </Checkbox>\n                    </ExpanderTitle>\n                    <ExpanderContent>\n                      <ExpanderExampleContent />\n                    </ExpanderContent>\n                  </Expander>\n                </ExpanderGroup>\n              </ModalContent>\n              <ModalFooter>\n                <VisuallyHidden id=\"save-disabled\">\n                  {t('example.default.ariaPublishDisabled')}\n                </VisuallyHidden>\n                <Button\n                  arial-label={t('example.default.publish')}\n                  onClick={() => setVisible(false)}\n                  aria-disabled={saveDisabled}\n                  {...(saveDisabled\n                    ? { 'aria-describedby': 'save-disabled' }\n                    : {})}\n                >\n                  {t('example.default.publish')}\n                </Button>\n                <Button\n                  variant=\"secondary\"\n                  arial-label={t('example.default.cancel')}\n                  onClick={() => setVisible(false)}\n                >\n                  {t('example.default.cancel')}\n                </Button>\n              </ModalFooter>\n            </Modal>\n          </ComponentExample>\n        </ComponentDescription>\n      )}\n    </Translation>\n  );\n};\n\nconst ConfirmExample = ({\n  title,\n  desc,\n  noCode,\n  ...passProps\n}: Partial<ModalProps> & {\n  title: string;\n  desc: string;\n  noCode: boolean;\n}): JSX.Element => {\n  const [visible, setVisible] = useState(false);\n  return (\n    <Translation ns={['modal']}>\n      {(t) => (\n        <ComponentDescription\n          mainTitle={title}\n          description={desc}\n          noCode={noCode}\n        >\n          <ComponentExample\n            style={{ marginBottom: suomifiDesignTokens.spacing.s }}\n          >\n            <Button onClick={() => setVisible(true)}>\n              {t('example.openText')}\n            </Button>\n            <Modal\n              {...passProps}\n              scrollable={false}\n              appElementId=\"___gatsby\"\n              visible={visible}\n              onEscKeyDown={() => setVisible(false)}\n            >\n              <ModalContent>\n                <ModalTitle>{t('example.confirm.title')}</ModalTitle>\n                <Paragraph>\n                  <Text>{t('example.confirm.content')}</Text>\n                </Paragraph>\n              </ModalContent>\n              <ModalFooter>\n                <Button\n                  arial-label={t('example.confirm.ariaSave')}\n                  onClick={() => setVisible(false)}\n                >\n                  {t('example.confirm.save')}\n                </Button>\n                <Button\n                  variant=\"secondary\"\n                  arial-label={t('example.confirm.ariaCancel')}\n                  onClick={() => setVisible(false)}\n                >\n                  {t('example.confirm.cancel')}\n                </Button>\n              </ModalFooter>\n            </Modal>\n          </ComponentExample>\n        </ComponentDescription>\n      )}\n    </Translation>\n  );\n};\n\nexport default withI18next()(Page);\n\nexport const query = graphql`\n  query($lng: String!) {\n    ...AllLocalesFragment\n  }\n`;\n","import React from 'react';\nimport { suomifiDesignTokens } from 'suomifi-ui-components';\n\nimport { Heading, Text } from 'components/ResponsiveComponents';\n\nconst NoteBox = ({ title, items }: Props): JSX.Element => (\n  <section\n    style={{\n      background: suomifiDesignTokens.colors.highlightLight3,\n      margin: `${suomifiDesignTokens.spacing.xl} 0`,\n      padding: suomifiDesignTokens.spacing.m,\n      border: `1px solid ${suomifiDesignTokens.colors.depthLight1}`,\n    }}\n  >\n    <Heading variant=\"h3\" as=\"h2\">\n      {title}\n    </Heading>\n    <ul\n      style={{ margin: 0, padding: `0 0 0 ${suomifiDesignTokens.spacing.s}` }}\n    >\n      {items.map(\n        (item, index) =>\n          !!item && (\n            <li key={index} style={{ margin: suomifiDesignTokens.spacing.m }}>\n              <Text>{item}</Text>\n            </li>\n          ),\n      )}\n    </ul>\n  </section>\n);\n\ninterface Props {\n  title: string;\n  items: string[];\n}\n\nexport default NoteBox;\n"],"sourceRoot":""}