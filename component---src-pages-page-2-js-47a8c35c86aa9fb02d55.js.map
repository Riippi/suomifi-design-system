{"version":3,"sources":["webpack:///./src/pages/page-2.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/header.tsx","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","SecondPage","a","createElement","title","to","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","react_i18next__WEBPACK_IMPORTED_MODULE_2__","_header__WEBPACK_IMPORTED_MODULE_3__","_header__WEBPACK_IMPORTED_MODULE_3___default","Layout","t","Fragment","siteTitle","style","margin","maxWidth","padding","paddingTop","Date","getFullYear","node","translate","gatsby_1","react_1","__importDefault","Header","background","marginBottom","Link","color","textDecoration","defaultProps","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-pages-page-2-js-47a8c35c86aa9fb02d55.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO title='Page two' />\n    <h1>Hi from the second page</h1>\n    <p>Welcome to page 2</p>\n    <Link to='/'>Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default SecondPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { I18n, translate } from 'react-i18next'\n\nimport Header from './header'\nimport '@csstools/normalize.css'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <I18n>\n    {t => (\n      <>\n        <Header siteTitle={t('site.title')} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0\n          }}>\n          {children}\n          <footer>Â© {new Date().getFullYear()}</footer>\n        </div>\n      </>\n    )}\n  </I18n>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default translate()(Layout)\n","import { Link } from 'gatsby'\nimport React from 'react'\n\nconst Header = ({ siteTitle }: Props) => (\n  <div\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`\n    }}>\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`\n      }}>\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to='/'\n          style={{\n            color: `white`,\n            textDecoration: `none`\n          }}>\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\ninterface Props {\n  siteTitle?: string\n}\n\nHeader.defaultProps = {\n  siteTitle: ``\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription\n              },\n              {\n                property: `og:title`,\n                content: title\n              },\n              {\n                property: `og:description`,\n                content: metaDescription\n              },\n              {\n                property: `og:type`,\n                content: `website`\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author\n              },\n              {\n                name: `twitter:title`,\n                content: title\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `)\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: []\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}