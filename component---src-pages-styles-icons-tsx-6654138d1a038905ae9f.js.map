{"version":3,"sources":["webpack:///./src/config/sidenav/styles.js","webpack:///./src/pages/styles/icons.tsx"],"names":["t","title","icon","items","to","showAsTo","label","iconCategories","id","icons","baseIcons","illustrativeIcons","doctypeIcons","StyledIcon","styled","Icon","StyledStaticIcon","StaticIcon","withI18next","ns","sideNavData","variant","map","item","key","mainTitle","description","exampleFirst","noCode","style","padding","justifyContent","background","border","paddingLeft","itemId","margin","defaultSuomifiTheme","spacing","xs","xxxl","xl","lineHeight","display","flexDirection","alignItems","width","height","getExampleIcon","query"],"mappings":"4FAAA,qCAGe,aAACA,GAAD,MAAQ,CACrBC,MAAOD,EAAE,gBACTE,KAAM,kBAAC,IAAD,CAAYA,KAAK,cACvBC,MAAO,CACL,CACEC,GAAI,WACJC,SAAU,gBACVC,MAAON,EAAE,sBAEX,CAAEI,GAAI,iBAAkBE,MAAON,EAAE,gBACjC,CAAEI,GAAI,sBAAuBE,MAAON,EAAE,qBACtC,CAAEI,GAAI,kBAAmBE,MAAON,EAAE,qB,kCCdtC,0MAsBMO,EAAiB,CACrB,CACEC,GAAI,YACJC,MAAOC,aAET,CACEF,GAAI,oBACJC,MAAOE,qBAET,CACEH,GAAI,eACJC,MAAOG,iBAILC,EAAaC,YAAOC,KAAV,wEAAGD,CAAH,+BAKVE,EAAmBF,YAAOG,KAAV,8EAAGH,CAAH,+BA+EPI,mCA3CF,kBACX,kBAAC,IAAD,CAAaC,GAAI,CAAC,QAAS,kBACxB,SAACnB,GAAD,OACC,kBAAC,IAAD,CAAQoB,YAAaA,YAAYpB,IAC/B,kBAAC,IAAD,CAAKC,MAAOD,EAAE,WACd,kBAAC,IAAD,CAASqB,QAAQ,MAAMrB,EAAE,UAEzB,kBAAC,IAAD,CAAWqB,QAAQ,QACjB,kBAAC,IAAD,CAAMA,QAAQ,QAAQrB,EAAE,WAGzBO,EAAee,KAAI,SAACC,GAAD,OAClB,kBAAC,IAAD,CACEC,IAAKD,EAAKf,GACViB,UAAWzB,EAAKuB,EAAKf,GAAT,UACZkB,YAAY,GACZC,cAAc,EACdC,QAAM,GAEN,kBAAC,IAAD,CACEC,MAAO,CACLC,QAAS,EACTC,eAAgB,aAChBC,WAAY,OACZC,OAAQ,OACRC,YAAa,SAGdX,EAAKd,MAAMa,KAAI,SAACpB,GACf,IAAMI,EACQ,cAAZiB,EAAKf,GACDR,EAAKE,EAAJ,UACDF,EAAE,gBAAgBE,EAAjB,UACP,OAhEO,SACrBM,EACA2B,EACA7B,EACAuB,GAJqB,OAMrB,yBACEL,IAAKhB,EACLqB,MAAK,eACHO,OAAWC,IAAoBC,QAAQC,GAAjC,IAAuCF,IAAoBC,QAAQE,KAAnE,IAA2EH,IAAoBC,QAAQG,GAAvG,KACNC,WAAY,OACZC,QAAS,OACTC,cAAe,SACfb,eAAgB,eAChBc,WAAY,SACZC,MAAO,OACPC,OAAQ,QACLlB,IAGO,cAAXM,EACC,kBAACtB,EAAD,CAAYX,KAAOM,IAEnB,kBAACQ,EAAD,CACEd,KAAOM,IAGX,6BAAMF,IAqCa0C,CAAe9C,EAAMqB,EAAKf,GAAIF,kBAY9C,IAAM2C,EAAQ","file":"component---src-pages-styles-icons-tsx-6654138d1a038905ae9f.js","sourcesContent":["import React from 'react';\nimport { StaticIcon } from 'suomifi-ui-components';\n\nexport default (t) => ({\n  title: t('styles:title'),\n  icon: <StaticIcon icon=\"magicWand\" />,\n  items: [\n    {\n      to: '/styles/',\n      showAsTo: '/styles/info/',\n      label: t('styles:info.title'),\n    },\n    { to: '/styles/icons/', label: t('icons:title') },\n    { to: '/styles/typography/', label: t('typography:title') },\n    { to: '/styles/colors/', label: t('colors:title') },\n  ],\n});\n","import React, { CSSProperties } from 'react';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport { Translation } from 'react-i18next';\nimport { withI18next } from '@wapps/gatsby-plugin-i18next';\nimport { baseIcons, illustrativeIcons, doctypeIcons } from 'suomifi-icons';\nimport {\n  defaultSuomifiTheme,\n  Icon,\n  StaticIcon,\n  BaseIconKeys,\n  IllustrativeIconKeys,\n  DoctypeIconKeys,\n} from 'suomifi-ui-components';\n\nimport Layout from 'components/layout';\nimport SEO from 'components/seo';\nimport ComponentDescription from 'components/ComponentDescription';\nimport sideNavData from 'config/sidenav/styles';\nimport ComponentExample from 'components/ComponentExample';\nimport { Heading, Text, Paragraph } from 'components/ResponsiveComponents';\n\nconst iconCategories = [\n  {\n    id: 'baseIcons',\n    icons: baseIcons,\n  },\n  {\n    id: 'illustrativeIcons',\n    icons: illustrativeIcons,\n  },\n  {\n    id: 'doctypeIcons',\n    icons: doctypeIcons,\n  },\n];\n\nconst StyledIcon = styled(Icon)`\n  height: 1.5em;\n  width: 1.5em;\n`;\n\nconst StyledStaticIcon = styled(StaticIcon)`\n  height: 256px;\n  width: 256px;\n`;\n\nconst getExampleIcon = (\n  id: string,\n  itemId: string,\n  label: string,\n  style?: CSSProperties,\n): JSX.Element => (\n  <div\n    key={id}\n    style={{\n      margin: `${defaultSuomifiTheme.spacing.xs} ${defaultSuomifiTheme.spacing.xxxl} ${defaultSuomifiTheme.spacing.xl} 0`,\n      lineHeight: '1rem',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-around',\n      alignItems: 'center',\n      width: '6rem',\n      height: '6rem',\n      ...style,\n    }}\n  >\n    {itemId === 'baseIcons' ? (\n      <StyledIcon icon={(id as any) as BaseIconKeys} />\n    ) : (\n      <StyledStaticIcon\n        icon={(id as any) as IllustrativeIconKeys | DoctypeIconKeys}\n      />\n    )}\n    <div>{label}</div>\n  </div>\n);\n\nconst Page = (): JSX.Element => (\n  <Translation ns={['icons', 'static-icons']}>\n    {(t) => (\n      <Layout sideNavData={sideNavData(t)}>\n        <SEO title={t('title')} />\n        <Heading variant=\"h1\">{t('title')}</Heading>\n\n        <Paragraph variant=\"lead\">\n          <Text variant=\"lead\">{t('intro')}</Text>\n        </Paragraph>\n\n        {iconCategories.map((item) => (\n          <ComponentDescription\n            key={item.id}\n            mainTitle={t(`${item.id}.title`)}\n            description=\"\"\n            exampleFirst={false}\n            noCode\n          >\n            <ComponentExample\n              style={{\n                padding: 0,\n                justifyContent: 'flex-start',\n                background: 'none',\n                border: 'none',\n                paddingLeft: '60px',\n              }}\n            >\n              {item.icons.map((icon) => {\n                const label =\n                  item.id === 'baseIcons'\n                    ? t(`${icon}.label`)\n                    : t(`static-icons:${icon}.label`);\n                return getExampleIcon(icon, item.id, label);\n              })}\n            </ComponentExample>\n          </ComponentDescription>\n        ))}\n      </Layout>\n    )}\n  </Translation>\n);\n\nexport default withI18next()(Page);\n\nexport const query = graphql`\n  query($lng: String!) {\n    ...AllLocalesFragment\n  }\n`;\n"],"sourceRoot":""}