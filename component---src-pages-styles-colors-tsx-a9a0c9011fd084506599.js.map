{"version":3,"sources":["webpack:///./src/config/sidenav/styles.js","webpack:///./src/components/NoteBox.tsx","webpack:///./src/pages/styles/colors.tsx"],"names":["t","title","icon","items","to","showAsTo","label","NoteBox","style","background","defaultSuomifiTheme","colors","highlightLight3","margin","spacing","xl","padding","m","border","depthLight1","variant","as","s","map","item","index","key","colorTokens","borderForLightColor","Object","entries","reduce","obj","value","name","getLuminance","colorCategories","id","blackBase","blackLight1","depthBase","depthDark1","brandBase","highlightBase","highlightLight1","highlightLight2","highlightDark1","depthLight2","accentBase","accentTertiaryDark1","whiteBase","depthLight3","highlightLight4","depthSecondary","depthSecondaryDark1","successBase","successSecondary","warningBase","alertBase","alertLight1","accentSecondary","accentSecondaryLight1","accentTertiary","withI18next","ns","sideNavData","section","mainTitle","paragraphs","links","description","exampleFirst","noCode","justifyContent","color","xs","lineHeight","width","height","marginBottom","fontSize","query"],"mappings":"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","file":"component---src-pages-styles-colors-tsx-a9a0c9011fd084506599.js","sourcesContent":["import React from 'react';\nimport { StaticIcon } from 'suomifi-ui-components';\n\nexport default (t) => ({\n  title: t('styles:title'),\n  icon: <StaticIcon icon=\"magicWand\" />,\n  items: [\n    {\n      to: '/styles/',\n      showAsTo: '/styles/info/',\n      label: t('styles:info.title'),\n    },\n    { to: '/styles/icons/', label: t('icons:title') },\n    { to: '/styles/typography/', label: t('typography:title') },\n    { to: '/styles/colors/', label: t('colors:title') },\n  ],\n});\n","import React from 'react';\nimport { defaultSuomifiTheme } from 'suomifi-ui-components';\n\nimport { Heading, Text } from 'components/ResponsiveComponents';\n\nconst NoteBox = ({ title, items }: Props): JSX.Element => (\n  <section\n    style={{\n      background: defaultSuomifiTheme.colors.highlightLight3,\n      margin: `${defaultSuomifiTheme.spacing.xl} 0`,\n      padding: defaultSuomifiTheme.spacing.m,\n      border: `1px solid ${defaultSuomifiTheme.colors.depthLight1}`,\n    }}\n  >\n    <Heading variant=\"h3\" as=\"h2\">\n      {title}\n    </Heading>\n    <ul\n      style={{ margin: 0, padding: `0 0 0 ${defaultSuomifiTheme.spacing.s}` }}\n    >\n      {items.map(\n        (item, index) =>\n          !!item && (\n            <li key={index} style={{ margin: defaultSuomifiTheme.spacing.m }}>\n              <Text>{item}</Text>\n            </li>\n          ),\n      )}\n    </ul>\n  </section>\n);\n\ninterface Props {\n  title: string;\n  items: string[];\n}\n\nexport default NoteBox;\n","import React, { CSSProperties } from 'react';\nimport { graphql } from 'gatsby';\nimport { Translation } from 'react-i18next';\nimport { withI18next } from '@wapps/gatsby-plugin-i18next';\nimport { defaultSuomifiTheme } from 'suomifi-ui-components';\nimport { getLuminance } from 'polished';\n\nimport Layout from 'components/layout';\nimport SEO from 'components/seo';\nimport ComponentDescription from 'components/ComponentDescription';\nimport sideNavData from 'config/sidenav/styles';\nimport NoteBox from 'components/NoteBox';\nimport Section, { Props as SectionProps } from 'components/Section';\nimport ComponentExample from 'components/ComponentExample';\nimport { Heading, Text, Paragraph } from 'components/ResponsiveComponents';\n\nconst colorTokens = defaultSuomifiTheme.colors;\n\nconst borderForLightColor = `1px solid ${colorTokens.depthLight1}`;\n\ntype ColorKeys = keyof typeof defaultSuomifiTheme.colors;\ninterface ColorItem {\n  name: string;\n  value: string;\n  border: string;\n}\ntype colorTypes = { [key in ColorKeys]?: ColorItem };\nconst colors: colorTypes = Object.entries(colorTokens).reduce(\n  (obj, [key, value]: [ColorKeys, string]) => ({\n    ...obj,\n    [key]: {\n      name: key,\n      value,\n      border:\n        getLuminance(value) > getLuminance('#f8f8f8')\n          ? borderForLightColor\n          : '0',\n    },\n  }),\n  {},\n);\n\nconst colorCategories = [\n  {\n    id: 'textColors',\n    colors: [\n      colors.blackBase,\n      colors.blackLight1,\n      colors.depthBase,\n      colors.depthDark1,\n    ],\n  },\n  { id: 'brandColors', colors: [colors.brandBase] },\n  {\n    id: 'controlColors',\n    colors: [\n      colors.highlightBase,\n      colors.highlightLight1,\n      colors.highlightLight2,\n      colors.highlightLight3,\n      colors.highlightDark1,\n      colors.depthBase,\n      colors.depthLight2,\n      colors.depthDark1,\n      colors.accentBase,\n      colors.accentTertiaryDark1,\n    ],\n  },\n  {\n    id: 'iconColors',\n    colors: [colors.accentBase, colors.depthBase, colors.depthDark1],\n  },\n  {\n    id: 'backgroundColors',\n    colors: [\n      colors.whiteBase,\n      colors.depthLight3,\n      colors.depthLight1,\n      colors.highlightLight2,\n      colors.highlightLight3,\n      colors.highlightLight4,\n      colors.depthSecondary,\n      colors.depthSecondaryDark1,\n    ],\n  },\n  {\n    id: 'trafficColors',\n    colors: [\n      colors.successBase,\n      colors.successSecondary,\n      colors.warningBase,\n      colors.alertBase,\n      colors.alertLight1,\n    ],\n  },\n  {\n    id: 'accentColors',\n    colors: [\n      colors.accentBase,\n      colors.accentSecondary,\n      colors.accentSecondaryLight1,\n      colors.accentTertiary,\n    ],\n  },\n];\n\nconst getExampleColor = (\n  id: string,\n  name: string,\n  value: string,\n  label: string,\n  style?: CSSProperties,\n): JSX.Element => (\n  <div\n    key={id}\n    style={{\n      margin: `${defaultSuomifiTheme.spacing.xs} ${defaultSuomifiTheme.spacing.xl} ${defaultSuomifiTheme.spacing.xl} 0`,\n      lineHeight: '1rem',\n    }}\n  >\n    <div\n      style={{\n        width: '10rem',\n        height: '3rem',\n        marginBottom: defaultSuomifiTheme.spacing.s,\n        background: value,\n        ...style,\n      }}\n    />\n    <div style={{ fontSize: '.8rem' }}>{label}</div>\n    <div style={{ fontSize: '.8rem' }}>{value}</div>\n    <div style={{ fontSize: '.8rem' }}>{name}</div>\n  </div>\n);\n\nconst Page = (): JSX.Element => (\n  <Translation ns={['colors']}>\n    {(t) => (\n      <Layout sideNavData={sideNavData(t)}>\n        <SEO title={t('title')} />\n        <Heading variant=\"h1\">{t('title')}</Heading>\n\n        <Paragraph variant=\"lead\">\n          <Text variant=\"lead\">{t('intro')}</Text>\n        </Paragraph>\n\n        <NoteBox title={t('note.title')} items={t('note.items')} />\n\n        {t<SectionProps[]>('sections').map((section, index) => (\n          <Section\n            key={index}\n            mainTitle={section.title}\n            paragraphs={section.paragraphs}\n            links={section.links}\n          />\n        ))}\n\n        {colorCategories.map((item) => (\n          <ComponentDescription\n            key={item.id}\n            mainTitle={t(`${item.id}.title`)}\n            description={t(`${item.id}.description`)}\n            exampleFirst={false}\n            noCode\n          >\n            <ComponentExample\n              style={{\n                padding: 0,\n                justifyContent: 'flex-start',\n                background: 'none',\n                border: 'none',\n              }}\n            >\n              {item.colors.map((color, index) =>\n                getExampleColor(\n                  `${item.id}.${index}`,\n                  color.name,\n                  color.value,\n                  t(`${color.name}.label`),\n                  { border: color.border },\n                ),\n              )}\n            </ComponentExample>\n          </ComponentDescription>\n        ))}\n      </Layout>\n    )}\n  </Translation>\n);\n\nexport default withI18next()(Page);\n\nexport const query = graphql`\n  query($lng: String!) {\n    ...AllLocalesFragment\n  }\n`;\n"],"sourceRoot":""}