{"version":3,"sources":["webpack:///./src/pages/components/toggle.tsx"],"names":["withI18next","useState","isChecked","setChecked","getAriaLabelText","t","name","ns","sideNavData","title","h1","lead","mainTitle","description","aria-label","onClick","toggleState","checked","items","map","section","index","key","paragraphs","links","query"],"mappings":"8FAAA,0MAoEeA,mCArDQ,WAA0B,MACfC,oBAAS,GAAlCC,EADwC,KAC7BC,EAD6B,KAGzCC,EAAmB,SAACC,GAAD,OACvBA,EAAE,iBAAgBH,EAAY,KAAO,OAAS,CAC5CI,KAAMD,EAAE,mBAOZ,OACE,kBAAC,qBAAD,CAAoBE,GAAI,CAAC,YACtB,SAAAF,GAAC,OACA,kBAAC,IAAD,CAAQG,YAAaA,YAAYH,IAC/B,kBAAC,IAAD,CAAKI,MAAOJ,EAAE,WACd,kBAAC,IAAQK,GAAT,KAAaL,EAAE,UAEf,kBAAC,IAAUM,KAAX,KACE,kBAAC,IAAKA,KAAN,KAAYN,EAAE,WAGhB,kBAAC,IAAD,CACEO,UAAWP,EAAE,iBACbQ,YAAaR,EAAE,wBAEf,kBAAC,IAAD,KACE,kBAAC,IAAD,CACES,aAAYV,EAAiBC,GAC7BU,QAAS,gBAAGC,EAAH,EAAGA,YArBxBb,EAqBsDa,IAC1CC,QAASf,GAERG,EAAE,mBAIT,kBAAC,IAAD,CAASI,MAAOJ,EAAE,cAAea,MAAOb,EAAE,gBAEzCA,EAAE,YAAYc,KAAI,SAACC,EAASC,GAAV,OACjB,kBAAC,IAAD,CACEC,IAAKD,EACLT,UAAWQ,EAAQX,MACnBc,WAAYH,EAAQG,WACpBC,MAAOJ,EAAQI,kBAWtB,IAAMC,EAAQ","file":"component---src-pages-components-toggle-tsx-03eef200c72809128a58.js","sourcesContent":["import React, { useState } from 'react';\nimport { graphql } from 'gatsby';\nimport { NamespacesConsumer } from 'react-i18next';\nimport { withI18next } from '@wapps/gatsby-plugin-i18next';\n\nimport Layout from 'components/layout';\nimport SEO from 'components/seo';\nimport { Toggle } from 'components/ExampleComponents';\nimport ComponentDescription from 'components/ComponentDescription';\nimport sideNavData from 'config/sidenav/components';\nimport NoteBox from 'components/NoteBox';\nimport Section from 'components/Section';\nimport ComponentExample from 'components/ComponentExample';\nimport { Heading, Text, Paragraph } from 'components/ResponsiveComponents';\n\nconst Page: React.FC = (): React.ReactElement => {\n  const [isChecked, setChecked] = useState(false);\n\n  const getAriaLabelText = (t: Function): string =>\n    t(`toggle.state.${isChecked ? 'on' : 'off'}`, {\n      name: t('toggle.label'),\n    });\n\n  const handleClick = (newState: boolean): void => {\n    setChecked(newState);\n  };\n\n  return (\n    <NamespacesConsumer ns={['toggle']}>\n      {t => (\n        <Layout sideNavData={sideNavData(t)}>\n          <SEO title={t('title')} />\n          <Heading.h1>{t('title')}</Heading.h1>\n\n          <Paragraph.lead>\n            <Text.lead>{t('intro')}</Text.lead>\n          </Paragraph.lead>\n\n          <ComponentDescription\n            mainTitle={t('default.title')}\n            description={t('default.description')}\n          >\n            <ComponentExample>\n              <Toggle\n                aria-label={getAriaLabelText(t)}\n                onClick={({ toggleState }) => handleClick(toggleState)}\n                checked={isChecked}\n              >\n                {t('toggle.label')}\n              </Toggle>\n            </ComponentExample>\n          </ComponentDescription>\n          <NoteBox title={t('note.title')} items={t('note.items')} />\n\n          {t('sections').map((section, index) => (\n            <Section\n              key={index}\n              mainTitle={section.title}\n              paragraphs={section.paragraphs}\n              links={section.links}\n            />\n          ))}\n        </Layout>\n      )}\n    </NamespacesConsumer>\n  );\n};\n\nexport default withI18next()(Page);\n\nexport const query = graphql`\n  query($lng: String!) {\n    ...AllLocalesFragment\n  }\n`;\n"],"sourceRoot":""}