{"version":3,"sources":["webpack:///./src/pages/components/dropdown.tsx","webpack:///./src/config/sidenav/components.js","webpack:///./src/components/NoteBox.tsx","webpack:///./src/components/NotificationBox.tsx","webpack:///./src/components/ExampleComponentUtil.tsx","webpack:///./src/components/ExampleComponents.tsx"],"names":["withI18next","ns","t","sideNavData","title","h1","notificationText","lead","mainTitle","description","name","labelText","item","value","items","map","section","index","key","paragraphs","links","visualPlaceholder","alwaysShowVisualPlaceholder","onChange","action","console","log","query","icon","to","showAsTo","label","NoteBox","style","background","suomifiDesignTokens","colors","highlightLight3","margin","spacing","xl","padding","m","border","depthLight1","h3","as","s","NotificationBox","display","justifyContent","alignItems","flexWrap","accentSecondaryLight1","fontSize","color","accentSecondary","bold","marginLeft","verticalAlign","values","typography","bodyText","unit","displayName","getVariants","Comp","Object","keys","Wrapper","props","getComponentWithDisplayName","reduce","obj","addDisplayNames","DestComp","SourceComp","assign","Button","OrigButton","Expander","OrigExpander","Breadcrumb","OrigBreadcrumb","Toggle","OrigToggle","Dropdown","OrigDropdown","Link","OrigLink","Heading","OrigHeading","Text","OrigText","TextInput","OrigTextInput","SearchInput","OrigSearchInput","Icon","OrigIcon","StaticIcon","OrigStaticIcon","Block","OrigBlock","LanguageMenu","OrigLanguageMenu","LanguageMenuItem","OrigLanguageMenuItem","Checkbox","OrigCheckbox","RadioButton","OrigRadioButton","Textarea","OrigTextarea"],"mappings":"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","file":"component---src-pages-components-dropdown-tsx-8c8fd4c374b97f3b68f3.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport { Translation } from 'react-i18next';\nimport { withI18next } from '@wapps/gatsby-plugin-i18next';\n\nimport Layout from 'components/layout';\nimport SEO from 'components/seo';\nimport { Dropdown } from 'components/ExampleComponents';\nimport ComponentDescription from 'components/ComponentDescription';\nimport sideNavData from 'config/sidenav/components';\nimport NoteBox from 'components/NoteBox';\nimport Section, { Props as SectionProps } from 'components/Section';\nimport ComponentExample from 'components/ComponentExample';\nimport NotificationBox from 'components/NotificationBox';\nimport { Heading, Text, Paragraph } from 'components/ResponsiveComponents';\n\nconst Page = (): JSX.Element => (\n  <Translation ns={['dropdown']}>\n    {(t) => (\n      <Layout sideNavData={sideNavData(t)}>\n        <SEO title={t('title')} />\n        <Heading.h1>{t('title')}</Heading.h1>\n        <NotificationBox notificationText={t('notification.content')} />\n\n        <Paragraph.lead>\n          <Text.lead>{t('intro')}</Text.lead>\n        </Paragraph.lead>\n\n        <ComponentDescription\n          mainTitle={t('example.title')}\n          description={t('example.description')}\n        >\n          <ComponentExample>\n            <Dropdown name=\"Dropdown\" labelText={t('example.label')}>\n              <Dropdown.item value=\"1\">{t('example.option1')}</Dropdown.item>\n              <Dropdown.item value=\"2\">{t('example.option2')}</Dropdown.item>\n              <Dropdown.item value=\"3\">{t('example.option3')}</Dropdown.item>\n            </Dropdown>\n          </ComponentExample>\n        </ComponentDescription>\n\n        <NoteBox title={t('note.title')} items={t('note.items')} />\n\n        {t<SectionProps[]>('sections').map((section, index) => (\n          <Section\n            key={index}\n            mainTitle={section.title}\n            paragraphs={section.paragraphs}\n            links={section.links}\n          />\n        ))}\n\n        <ComponentDescription\n          mainTitle={t('example1.title')}\n          description={t('example1.description')}\n        >\n          <ComponentExample>\n            <Dropdown\n              visualPlaceholder={t('example1.placeholder')}\n              alwaysShowVisualPlaceholder\n              labelText={t('example1.label')}\n              onChange={(action) => console.log(action, 'selected')}\n            >\n              <Dropdown.item value=\"Toiminto1\">\n                {t('example1.option1')}\n              </Dropdown.item>\n              <Dropdown.item value=\"Toiminto2\">\n                {t('example1.option2')}\n              </Dropdown.item>\n            </Dropdown>\n          </ComponentExample>\n        </ComponentDescription>\n      </Layout>\n    )}\n  </Translation>\n);\n\nexport default withI18next()(Page);\n\nexport const query = graphql`\n  query($lng: String!) {\n    ...AllLocalesFragment\n  }\n`;\n","import React from 'react';\nimport { StaticIcon } from 'suomifi-ui-components';\n\nexport default (t) => ({\n  title: t('components:title'),\n  icon: <StaticIcon icon=\"puzzle\" />,\n  items: [\n    {\n      to: '/components/',\n      showAsTo: '/components/info/',\n      label: t('components:info.title'),\n    },\n    { to: '/components/searchinput/', label: t('searchinput:title') },\n    { to: '/components/icon/', label: t('icon:title') },\n    { to: '/components/languagemenu/', label: t('languagemenu:title') },\n    { to: '/components/expander/', label: t('expander:title') },\n    { to: '/components/link/', label: t('link:title') },\n    { to: '/components/block/', label: t('block:title') },\n    { to: '/components/breadcrumb/', label: t('breadcrumb:title') },\n    { to: '/components/heading/', label: t('heading:title') },\n    { to: '/components/button/', label: t('button:title') },\n    { to: '/components/dropdown/', label: t('dropdown:title') },\n    { to: '/components/text/', label: t('text:title') },\n    { to: '/components/textarea/', label: t('textarea:title') },\n    { to: '/components/textinput/', label: t('textinput:title') },\n    { to: '/components/toggle/', label: t('toggle:title') },\n    { to: '/components/radiobutton/', label: t('radiobutton:title') },\n    { to: '/components/checkbox/', label: t('checkbox:title') },\n  ],\n});\n","import React from 'react';\nimport { suomifiDesignTokens } from 'suomifi-ui-components';\n\nimport { Heading, Text } from 'components/ResponsiveComponents';\n\nconst NoteBox = ({ title, items }: Props): JSX.Element => (\n  <section\n    style={{\n      background: suomifiDesignTokens.colors.highlightLight3,\n      margin: `${suomifiDesignTokens.spacing.xl} 0`,\n      padding: suomifiDesignTokens.spacing.m,\n      border: `1px solid ${suomifiDesignTokens.colors.depthLight1}`,\n    }}\n  >\n    <Heading.h3 as=\"h2\">{title}</Heading.h3>\n    <ul\n      style={{ margin: 0, padding: `0 0 0 ${suomifiDesignTokens.spacing.s}` }}\n    >\n      {items.map(\n        (item, index) =>\n          !!item && (\n            <li key={index} style={{ margin: suomifiDesignTokens.spacing.m }}>\n              <Text>{item}</Text>\n            </li>\n          ),\n      )}\n    </ul>\n  </section>\n);\n\ninterface Props {\n  title: string;\n  items: string[];\n}\n\nexport default NoteBox;\n","import React, { CSSProperties } from 'react';\nimport { suomifiDesignTokens, Icon } from 'suomifi-ui-components';\nimport { Text } from 'components/ResponsiveComponents';\nimport { Translation } from 'react-i18next';\n\ninterface Props {\n  style?: CSSProperties;\n  notificationText?: string;\n}\n\nconst NotificationBox = ({ style, notificationText }: Props): JSX.Element => (\n  <Translation>\n    {(t) => (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexWrap: 'wrap',\n          padding: suomifiDesignTokens.spacing.xl,\n          margin: `${suomifiDesignTokens.spacing.s} 0`,\n          ...style,\n          background: suomifiDesignTokens.colors.accentSecondaryLight1,\n          fontSize: '24px',\n        }}\n      >\n        <Icon icon=\"error\" color={suomifiDesignTokens.colors.accentSecondary} />\n        <Text.bold\n          style={{\n            marginLeft: suomifiDesignTokens.spacing.s,\n            verticalAlign: 'middle',\n            fontSize:\n              suomifiDesignTokens.values.typography.bodyText.fontSize.value +\n              suomifiDesignTokens.values.typography.bodyText.fontSize.unit,\n          }}\n        >\n          {notificationText || t('common:work.in.progress.warning')}\n        </Text.bold>\n      </div>\n    )}\n  </Translation>\n);\n\nNotificationBox.displayName = 'div';\n\nexport default NotificationBox;\n","import React, { ComponentClass } from 'react';\n\nconst getComponentWithDisplayName = (\n  Comp: Function,\n  displayName: string,\n): Function => {\n  const Wrapper = (props): JSX.Element => <Comp {...props} />;\n  Wrapper.displayName = displayName;\n  return Wrapper;\n};\n\nconst getVariants = (\n  Comp: ComponentClass,\n  displayName: string,\n): Record<string, Function> =>\n  Object.keys(Comp)\n    .map((key) => ({\n      [key]: getComponentWithDisplayName(Comp[key], `${displayName}.${key}`),\n    }))\n    .reduce((obj, item) => ({ ...obj, ...item }), {});\n\nexport const addDisplayNames = (\n  DestComp: ComponentClass,\n  SourceComp: ComponentClass,\n  displayName: string,\n): void => {\n  Object.assign(DestComp, {\n    displayName,\n    ...getVariants(SourceComp, displayName),\n  });\n};\n","import {\n  Button as OrigButton,\n  Expander as OrigExpander,\n  Breadcrumb as OrigBreadcrumb,\n  Toggle as OrigToggle,\n  Dropdown as OrigDropdown,\n  Link as OrigLink,\n  Heading as OrigHeading,\n  Text as OrigText,\n  TextInput as OrigTextInput,\n  SearchInput as OrigSearchInput,\n  Icon as OrigIcon,\n  StaticIcon as OrigStaticIcon,\n  Block as OrigBlock,\n  LanguageMenu as OrigLanguageMenu,\n  LanguageMenuItem as OrigLanguageMenuItem,\n  Checkbox as OrigCheckbox,\n  RadioButton as OrigRadioButton,\n  Textarea as OrigTextarea,\n} from 'suomifi-ui-components';\nimport { addDisplayNames } from 'components/ExampleComponentUtil';\n\nexport class Button extends OrigButton {}\naddDisplayNames(Button, OrigButton, 'Button');\n\nexport class Expander extends OrigExpander {}\naddDisplayNames(Expander, OrigExpander, 'Expander');\n\nexport class Breadcrumb extends OrigBreadcrumb {}\naddDisplayNames(Breadcrumb, OrigBreadcrumb, 'Breadcrumb');\n\nexport class Toggle extends OrigToggle {}\naddDisplayNames(Toggle, OrigToggle, 'Toggle');\n\nexport class Dropdown extends OrigDropdown {}\naddDisplayNames(Dropdown, OrigDropdown, 'Dropdown');\n\nexport class Link extends OrigLink {}\naddDisplayNames(Link, OrigLink, 'Link');\n\nexport class Heading extends OrigHeading {}\naddDisplayNames(Heading, OrigHeading, 'Heading');\n\nexport class Text extends OrigText {}\naddDisplayNames(Text, OrigText, 'Text');\n\nexport class TextInput extends OrigTextInput {}\naddDisplayNames(TextInput, OrigText, 'TextInput');\n\nexport class SearchInput extends OrigSearchInput {}\naddDisplayNames(SearchInput, OrigSearchInput, 'SearchInput');\n\nexport class Icon extends OrigIcon {}\naddDisplayNames(Icon, OrigIcon, 'Icon');\n\nexport class StaticIcon extends OrigStaticIcon {}\naddDisplayNames(StaticIcon, OrigStaticIcon, 'StaticIcon');\n\nexport class Block extends OrigBlock {}\naddDisplayNames(Block, OrigBlock, 'Block');\n\nexport class LanguageMenu extends OrigLanguageMenu {}\naddDisplayNames(LanguageMenu, OrigLanguageMenu, 'LanguageMenu');\n\nexport class LanguageMenuItem extends OrigLanguageMenuItem {}\naddDisplayNames(LanguageMenuItem, OrigLanguageMenuItem, 'LanguageMenuItem');\n\nexport class Checkbox extends OrigCheckbox {}\naddDisplayNames(Checkbox, OrigCheckbox, 'Checkbox');\n\nexport class RadioButton extends OrigRadioButton {}\naddDisplayNames(RadioButton, OrigRadioButton, 'RadioButton');\n\nexport class Textarea extends OrigTextarea {}\naddDisplayNames(Textarea, OrigTextarea, 'Textarea');\n"],"sourceRoot":""}