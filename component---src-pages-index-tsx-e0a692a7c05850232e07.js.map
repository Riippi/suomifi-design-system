{"version":3,"sources":["webpack:///./src/components/ContentBoxes.tsx","webpack:///./src/components/Annotation.tsx","webpack:///./src/pages/index.tsx"],"names":["Block","_ref","block","Object","core_browser_esm","react_default","a","Fragment","icon","style","display","alignItems","justifyContent","width","height","marginBottom","border","suomifiTheme","colors","depthLight13","borderRadius","fontSize","Icon","title","ResponsiveComponents","h2","paragraphs","map","paragraph","index","key","text","margin","padding","listStyle","links","link","url","Link","ContentBoxes","_ref2","hasFrame","mainTitle","blocks","background","whiteBase","maxWidth","h1","textAlign","flexWrap","flex","ContentBoxes_Block","linkStyle","color","&:hover","textDecoration","Content","description","_ref$center","center","marginLeft","Annotation","highlightBase","Responsive","Annotation_Content","withI18next","es","ns","t","layout","seo","components_Annotation","section","components_ContentBoxes","query"],"mappings":"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","file":"component---src-pages-index-tsx-e0a692a7c05850232e07.js","sourcesContent":["import React from 'react'\nimport { suomifiTheme, Icon } from 'suomifi-ui-components'\nimport { StaticIconKeys } from 'suomifi-icons'\n\nimport { Heading, Text } from './ResponsiveComponents'\nimport Link from './Link'\n\nconst Block = ({ block }: { block: Block }): JSX.Element => (\n  <>\n    {!!block.icon && (\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '70px',\n          height: '70px',\n          marginBottom: '2rem',\n          border: `1px solid ${suomifiTheme.colors.depthLight13}`,\n          borderRadius: '50%',\n          fontSize: '50px'\n        }}>\n        <Icon icon={block.icon} />\n      </div>\n    )}\n    {!!block.title && <Heading.h2>{block.title}</Heading.h2>}\n    {block.paragraphs.map((paragraph, index) => (\n      <div key={index}>\n        {!!paragraph.text && (\n          <p>\n            <Text>{paragraph.text}</Text>\n          </p>\n        )}\n      </div>\n    ))}\n    <ul style={{ margin: 0, padding: 0, width: '100%', listStyle: 'none' }}>\n      {block.links.map(\n        (link, index) =>\n          link &&\n          !!link.text &&\n          !!link.url && (\n            <li key={index}>\n              <Link text={link.text} url={link.url} />\n            </li>\n          )\n      )}\n    </ul>\n  </>\n)\n\nconst ContentBoxes = ({ hasFrame, mainTitle, blocks }: Props): JSX.Element => (\n  <section\n    style={{\n      background: hasFrame ? suomifiTheme.colors.whiteBase : 'none',\n      padding: '2rem 1rem 0',\n      display: 'flex',\n      justifyContent: 'center'\n    }}>\n    <div style={{ maxWidth: 1140 }}>\n      <Heading.h1 style={{ textAlign: 'center' }}>{mainTitle}</Heading.h1>\n      <div\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'space-evenly',\n          margin: '2rem 0'\n        }}>\n        {blocks.map((block, index) => (\n          <article key={index} style={{ flex: '1 1 30%', margin: '1rem' }}>\n            <Block block={block} />\n          </article>\n        ))}\n      </div>\n    </div>\n  </section>\n)\n\ninterface Props {\n  hasFrame?: boolean\n  mainTitle: string\n  blocks: Block[]\n}\n\ninterface Block {\n  icon?: StaticIconKeys\n  title: string\n  paragraphs: Paragraph[]\n  links: Link[]\n}\n\ninterface Link {\n  text: string\n  url: string\n}\n\ninterface Paragraph {\n  text: string\n}\n\nexport default ContentBoxes\n","import React from 'react'\nimport { suomifiTheme } from 'suomifi-ui-components'\n\nimport { Heading, Text } from './ResponsiveComponents'\nimport Link from './Link'\nimport { Desktop, Mobile, Tablet } from './Responsive'\n\nconst linkStyle = {\n  padding: '.5rem 1rem',\n  border: `1px solid ${suomifiTheme.colors.whiteBase}`,\n  borderRadius: '2px',\n  color: suomifiTheme.colors.whiteBase,\n  fontSize: '16px',\n  '&:hover': {\n    textDecoration: 'none'\n  }\n}\n\nconst Content = ({\n  title,\n  description,\n  link,\n  center = false\n}: Props & { center?: boolean }): JSX.Element => (\n  <div\n    style={{\n      width: '100%',\n      maxWidth: 900,\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignItems: 'center',\n      justifyContent: center ? 'center' : 'space-between'\n    }}>\n    <div\n      style={{\n        flex: center ? '1 1 100%' : '1 1 70%',\n        textAlign: center ? 'center' : 'initial'\n      }}>\n      <Heading.h2 color='whiteBase' style={{ textAlign: 'inherit' }}>\n        {title}\n      </Heading.h2>\n      {description && (\n        <p style={{ margin: '1rem 0 0 0' }}>\n          <Text color='whiteBase'>{description}</Text>\n        </p>\n      )}\n    </div>\n    {link && !!link.text && !!link.url && (\n      <div\n        style={{\n          margin: '1.5rem 0 1rem 0',\n          marginLeft: center ? 0 : '2rem'\n        }}>\n        <Link text={link.text} url={link.url} style={linkStyle} />\n      </div>\n    )}\n  </div>\n)\n\nconst Annotation = ({ title, description, link }: Props): JSX.Element => (\n  <div\n    style={{\n      margin: 0,\n      padding: '1rem',\n      background: suomifiTheme.colors.highlightBase,\n      display: 'flex',\n      justifyContent: 'center'\n    }}>\n    <Desktop>\n      <Content title={title} description={description} link={link} />\n    </Desktop>\n    <Tablet>\n      <Content title={title} description={description} link={link} />\n    </Tablet>\n    <Mobile>\n      <Content title={title} description={description} link={link} center />\n    </Mobile>\n  </div>\n)\n\ninterface Props {\n  title: string\n  description: string\n  link?: Link\n}\n\ninterface Link {\n  text: string\n  url: string\n}\n\nexport default Annotation\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport { NamespacesConsumer } from 'react-i18next'\nimport { withI18next } from '@wapps/gatsby-plugin-i18next'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport ContentBoxes from '../components/ContentBoxes'\nimport Annotation from '../components/Annotation'\n\nconst Page = (): JSX.Element => (\n  <NamespacesConsumer ns={['home']}>\n    {t => (\n      <Layout hasFrame={false}>\n        <SEO title={t('title')} />\n\n        <Annotation\n          title={t('note.title')}\n          description={t('note.description')}\n          link={{ text: t('note.link.text'), url: t('note.link.url') }}\n        />\n\n        {t('sections').map((section, index) => (\n          <ContentBoxes\n            key={index}\n            mainTitle={section.mainTitle}\n            blocks={section.blocks}\n          />\n        ))}\n\n        {t('framedSections').map((section, index) => (\n          <ContentBoxes\n            key={index}\n            hasFrame\n            mainTitle={section.mainTitle}\n            blocks={section.blocks}\n          />\n        ))}\n      </Layout>\n    )}\n  </NamespacesConsumer>\n)\n\nexport default withI18next()(Page)\n\nexport const query = graphql`\n  query($lng: String!) {\n    ...AllLocalesFragment\n  }\n`\n"],"sourceRoot":""}